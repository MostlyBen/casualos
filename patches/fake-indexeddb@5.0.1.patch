diff --git a/build/cjs/lib/scheduling.js b/build/cjs/lib/scheduling.js
index 2814f5129414c8feb8a69a888871b5e405011600..e6e92195b5935a33c331efce46eee058b2e4d02b 100644
--- a/build/cjs/lib/scheduling.js
+++ b/build/cjs/lib/scheduling.js
@@ -29,4 +29,9 @@ function getSetImmediateFromJsdom() {
 // transactions are marked as not active when the event loop runs. The next
 // tick queue and microtask queue run within the current event loop macrotask,
 // so they'd process database operations too quickly.
-const queueTask = exports.queueTask = globalThis.setImmediate || getSetImmediateFromJsdom() || (fn => setTimeout(fn, 0));
\ No newline at end of file
+const queueTask = exports.queueTask = (fn) => {
+    const setImmediate = globalThis.setImmediate || 
+        getSetImmediateFromJsdom() || 
+        ((fn) => setTimeout(fn, 0));
+    setImmediate(fn);
+};
\ No newline at end of file
diff --git a/build/esm/lib/scheduling.js b/build/esm/lib/scheduling.js
index c85f294f1d152a226a4ac416f4c8a4a43e84d0e9..1823c3b6649d15dac7b700faf6560cf135ae7358 100644
--- a/build/esm/lib/scheduling.js
+++ b/build/esm/lib/scheduling.js
@@ -23,4 +23,9 @@ function getSetImmediateFromJsdom() {
 // transactions are marked as not active when the event loop runs. The next
 // tick queue and microtask queue run within the current event loop macrotask,
 // so they'd process database operations too quickly.
-export const queueTask = globalThis.setImmediate || getSetImmediateFromJsdom() || (fn => setTimeout(fn, 0));
\ No newline at end of file
+export const queueTask = (fn) => {
+    const setImmediate = globalThis.setImmediate || 
+        getSetImmediateFromJsdom() || 
+        ((fn) => setTimeout(fn, 0));
+    setImmediate(fn);
+}
