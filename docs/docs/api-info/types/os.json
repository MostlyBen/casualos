{
    "hash": "types/os",
    "pageTitle": "OS Types",
    "pageDescription": "Defines the types that are used by OS actions.",
    "pageSidebarLabel": "OS",
    "contents": [
        {
            "id": 2389,
            "order": 0,
            "name": "Geolocation",
            "reflection": {
                "id": 2389,
                "name": "Geolocation",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "Defines the possible geolocation results.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "doctitle",
                            "paramName": "",
                            "text": "OS Types"
                        },
                        {
                            "tag": "docsidebar",
                            "paramName": "",
                            "text": "OS"
                        },
                        {
                            "tag": "docdescription",
                            "paramName": "",
                            "text": "Defines the types that are used by OS actions."
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "01-geo"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "0"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "Geolocation\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2669,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 2390,
                            "name": "SuccessfulGeolocation"
                        },
                        {
                            "type": "reference",
                            "id": 2400,
                            "name": "UnsuccessfulGeolocation"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "Defines the possible geolocation results.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "doctitle",
                        "paramName": "",
                        "text": "OS Types"
                    },
                    {
                        "tagName": "docsidebar",
                        "paramName": "",
                        "text": "OS"
                    },
                    {
                        "tagName": "docdescription",
                        "paramName": "",
                        "text": "Defines the types that are used by OS actions."
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "01-geo"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "0"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "Geolocation\n"
                    }
                ]
            },
            "group": "01-geo"
        },
        {
            "id": 2390,
            "order": 1,
            "name": "SuccessfulGeolocation",
            "reflection": {
                "id": 2390,
                "name": "SuccessfulGeolocation",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful geolocation result.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "01-geo"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "1"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SuccessfulGeolocation\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2392,
                        "name": "altitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The altitude that the device is near.\nNull if the device does not support determining the altitude.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2686,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2393,
                        "name": "altitudeAccuracy",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The accuracy of the altitude in meters.\nNull if the device does not support altitude.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2692,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2397,
                        "name": "heading",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The heading of the device from north in radians.\n0 is true north, Math.PI/2 is east, Math.PI is south and 3/2*Math.PI is west.\nThis value is null if the device is unable to determine the heading.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2714,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2394,
                        "name": "latitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The latitude that the device is near.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2697,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2395,
                        "name": "longitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The longitude that the device is near.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2702,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2396,
                        "name": "positionalAccuracy",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The accuracy of the positional location (latitude and longitude) in meters.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2707,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2398,
                        "name": "speed",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The speed that the device is moving in meters per second.\nNull if the device does not support calculating the speed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2720,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2391,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2680,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    },
                    {
                        "id": 2399,
                        "name": "timestamp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The timestamp of the geolocation result.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2725,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2392,
                            2393,
                            2397,
                            2394,
                            2395,
                            2396,
                            2398,
                            2391,
                            2399
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2679,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful geolocation result.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "01-geo"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "1"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SuccessfulGeolocation\n"
                    }
                ]
            },
            "group": "01-geo"
        },
        {
            "id": 2400,
            "order": 2,
            "name": "UnsuccessfulGeolocation",
            "reflection": {
                "id": 2400,
                "name": "UnsuccessfulGeolocation",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents an unsuccessful geolocation result.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "01-geo"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "2"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "UnsuccessfulGeolocation\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2402,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The code of the error that occurred.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2742,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "timeout"
                                },
                                {
                                    "type": "literal",
                                    "value": "permission_denied"
                                },
                                {
                                    "type": "literal",
                                    "value": "position_unavailable"
                                },
                                {
                                    "type": "literal",
                                    "value": "unknown"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2403,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The message of the error that occurred.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2751,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2401,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2737,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2402,
                            2403,
                            2401
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2736,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents an unsuccessful geolocation result.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "01-geo"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "2"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "UnsuccessfulGeolocation\n"
                    }
                ]
            },
            "group": "01-geo"
        },
        {
            "id": 2404,
            "order": 3,
            "name": "ConvertGeolocationToWhat3WordsOptions",
            "reflection": {
                "id": 2404,
                "name": "ConvertGeolocationToWhat3WordsOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents options for converting a geolocation to a what3words address.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "01-geo"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "3"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ConvertGeolocationToWhat3WordsOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2407,
                        "name": "language",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The identifier of the language that should be used for the resulting what3words address.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2954,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2405,
                        "name": "latitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The latitude to convert.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2944,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2406,
                        "name": "longitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The longitude to convert.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2949,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2407,
                            2405,
                            2406
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2940,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2415,
                        "name": "ConvertGeolocationToWhat3WordsAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents options for converting a geolocation to a what3words address.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "01-geo"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "3"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ConvertGeolocationToWhat3WordsOptions\n"
                    }
                ]
            },
            "group": "01-geo"
        },
        {
            "id": 2442,
            "order": 0,
            "name": "SnapTarget",
            "reflection": {
                "id": 2442,
                "name": "SnapTarget",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The list of possible snap targets.\n- `\"ground\"` means that the dragged bot should snap to the ground plane. This option is overriden by \"grid\".\n- `\"grid\"` means that the dragged bot should snap to grid tiles.\n- `\"face\"` means that the dragged bot should snap to other bot faces.\n- `\"bots\"` means that the dragged bot will snap to other bots.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "10-snap"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "0"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SnapTarget\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2358,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "ground"
                        },
                        {
                            "type": "literal",
                            "value": "grid"
                        },
                        {
                            "type": "literal",
                            "value": "face"
                        },
                        {
                            "type": "literal",
                            "value": "bots"
                        },
                        {
                            "type": "reference",
                            "id": 2435,
                            "name": "SnapPoint"
                        },
                        {
                            "type": "reference",
                            "id": 2423,
                            "name": "SnapAxis"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The list of possible snap targets.\n- `\"ground\"` means that the dragged bot should snap to the ground plane. This option is overriden by \"grid\".\n- `\"grid\"` means that the dragged bot should snap to grid tiles.\n- `\"face\"` means that the dragged bot should snap to other bot faces.\n- `\"bots\"` means that the dragged bot will snap to other bots.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "10-snap"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "0"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SnapTarget\n"
                    }
                ]
            },
            "group": "10-snap"
        },
        {
            "id": 2435,
            "order": 1,
            "name": "SnapPoint",
            "reflection": {
                "id": 2435,
                "name": "SnapPoint",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a snap point.\nThat is, a point in 3D space with an associated snap distance.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "10-snap"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "1"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SnapPoint\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2441,
                        "name": "distance",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The distance that the snap point should take effect at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2313,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2436,
                        "name": "position",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": [],
                        "comment": {
                            "shortText": "The 3D position for the point.",
                            "tags": [
                                {
                                    "tag": "docsource",
                                    "paramName": "",
                                    "text": "Vector3\n"
                                }
                            ]
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2308,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2437,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2438,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2308,
                                                "character": 16
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2439,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2308,
                                                "character": 27
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2440,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2308,
                                                "character": 38
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2438,
                                            2439,
                                            2440
                                        ]
                                    }
                                ]
                            }
                        },
                        "typeText": "interface Vector3 {\n    x: number;\n    y: number;\n    z: number;\n}",
                        "typeReference": "Vector3",
                        "references": ""
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2441,
                            2436
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2302,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a snap point.\nThat is, a point in 3D space with an associated snap distance.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "10-snap"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "1"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SnapPoint\n"
                    }
                ]
            },
            "group": "10-snap"
        },
        {
            "id": 2423,
            "order": 2,
            "name": "SnapAxis",
            "reflection": {
                "id": 2423,
                "name": "SnapAxis",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a snap axis.\nThat is, a ray in 3D space with an associated snap distance.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docgroup",
                            "paramName": "",
                            "text": "10-snap"
                        },
                        {
                            "tag": "docorder",
                            "paramName": "",
                            "text": "2"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SnapAxis\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2424,
                        "name": "direction",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": [],
                        "comment": {
                            "shortText": "The 3D direction that the axis ray travels along.",
                            "tags": [
                                {
                                    "tag": "docsource",
                                    "paramName": "",
                                    "text": "Vector3\n"
                                }
                            ]
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2331,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2425,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2426,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2331,
                                                "character": 17
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2427,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2331,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2428,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2331,
                                                "character": 39
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2426,
                                            2427,
                                            2428
                                        ]
                                    }
                                ]
                            }
                        },
                        "typeText": "interface Vector3 {\n    x: number;\n    y: number;\n    z: number;\n}",
                        "typeReference": "Vector3",
                        "references": ""
                    },
                    {
                        "id": 2434,
                        "name": "distance",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The distance from the ray line that the snap point should take effect at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2343,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2429,
                        "name": "origin",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": [],
                        "comment": {
                            "shortText": "The 3D position that the ray starts at.",
                            "tags": [
                                {
                                    "tag": "docsource",
                                    "paramName": "",
                                    "text": "Vector3\n"
                                }
                            ]
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2338,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2430,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2431,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2338,
                                                "character": 14
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2432,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2338,
                                                "character": 25
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2433,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2338,
                                                "character": 36
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2431,
                                            2432,
                                            2433
                                        ]
                                    }
                                ]
                            }
                        },
                        "typeText": "interface Vector3 {\n    x: number;\n    y: number;\n    z: number;\n}",
                        "typeReference": "Vector3",
                        "references": ""
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2424,
                            2434,
                            2429
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2325,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a snap axis.\nThat is, a ray in 3D space with an associated snap distance.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docgroup",
                        "paramName": "",
                        "text": "10-snap"
                    },
                    {
                        "tagName": "docorder",
                        "paramName": "",
                        "text": "2"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SnapAxis\n"
                    }
                ]
            },
            "group": "10-snap"
        },
        {
            "id": 2840,
            "order": 9999,
            "name": "ARSupportedAction",
            "reflection": {
                "id": 2840,
                "name": "ARSupportedAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that checks for AR support on the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ARSupportedAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2843,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2842,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2841,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1812,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "ar_supported"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2844,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2843,
                            2842,
                            2841,
                            2844
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1811,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that checks for AR support on the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ARSupportedAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2469,
            "order": 9999,
            "name": "AddDropSnapAction",
            "reflection": {
                "id": 2469,
                "name": "AddDropSnapAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines a base interface for actions that can add drop snap points.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "AddDropSnapAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2470,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the bot that, when it is a drop target, the snap points should be enabled.\nIf null, then the targets apply globally during the drag operation.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2275,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2471,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of the event.\nThis helps determine how the event should be applied to the state.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 12,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2472,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2470,
                            2471,
                            2472
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2270,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2473,
                        "name": "AddDropSnapPointsAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines a base interface for actions that can add drop snap points.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "AddDropSnapAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2473,
            "order": 9999,
            "name": "AddDropSnapPointsAction",
            "reflection": {
                "id": 2473,
                "name": "AddDropSnapTargetsAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to add some snap points for a drag operation.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "AddDropSnapPointsAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2476,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the bot that, when it is a drop target, the snap points should be enabled.\nIf null, then the targets apply globally during the drag operation.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2275,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2470,
                            "name": "AddDropSnapAction.botId"
                        }
                    },
                    {
                        "id": 2475,
                        "name": "targets",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The list of snap targets that should be used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2290,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "id": 2442,
                                "name": "SnapTarget"
                            }
                        }
                    },
                    {
                        "id": 2474,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of the event.\nThis helps determine how the event should be applied to the state.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2285,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "add_drop_snap_targets"
                        },
                        "overwrites": {
                            "type": "reference",
                            "id": 2471,
                            "name": "AddDropSnapAction.type"
                        }
                    },
                    {
                        "id": 2477,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2472,
                            "name": "AddDropSnapAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2476,
                            2475,
                            2474,
                            2477
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2284,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "id": 2469,
                        "name": "AddDropSnapAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to add some snap points for a drag operation.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "AddDropSnapPointsAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3045,
            "order": 9999,
            "name": "AnalyticsRecordEventAction",
            "reflection": {
                "id": 3045,
                "name": "AnalyticsRecordEventAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An action that is used to record an event for analytics.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "AnalyticsRecordEventAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3048,
                        "name": "metadata",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The metadata for the event.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3322,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "any"
                        }
                    },
                    {
                        "id": 3047,
                        "name": "name",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the event.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3317,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 3050,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3049,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3046,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3312,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "analytics_record_event"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3051,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3048,
                            3047,
                            3050,
                            3049,
                            3046,
                            3051
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3311,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An action that is used to record an event for analytics.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "AnalyticsRecordEventAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2984,
            "order": 9999,
            "name": "AuthData",
            "reflection": {
                "id": 2984,
                "name": "AuthData",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a authenticated user.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "AuthData\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2989,
                        "name": "avatarPortraitUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL that the user's avatar portrait is at.\nNull if the user does not have an avatar.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2869,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2988,
                        "name": "avatarUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL of the user's avatar.\nNull if the user does not have an avatar.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2863,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2987,
                        "name": "displayName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The display name of the user.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2857,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2990,
                        "name": "hasActiveSubscription",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the user has an active subscription that they are paying for.\nIf false, then the user either has no subscription or has a default subscription.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2875,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2986,
                        "name": "name",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the user.\nNull if the user has not set a name.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2852,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2992,
                        "name": "privacyFeatures",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The privacy features that the user has enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2887,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2993,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2996,
                                        "name": "allowAI",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "Whether AI is allowed.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2901,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                        }
                                    },
                                    {
                                        "id": 2995,
                                        "name": "allowPublicData",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "Whether the user is allowed to access or publish public data.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2896,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                        }
                                    },
                                    {
                                        "id": 2997,
                                        "name": "allowPublicInsts",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "Whether public insts are allowed.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2906,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                        }
                                    },
                                    {
                                        "id": 2994,
                                        "name": "publishData",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "Whether the user is allowed to publish any data.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2891,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2996,
                                            2995,
                                            2997,
                                            2994
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2991,
                        "name": "subscriptionTier",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The subscription tier that is currently active for the user.\nIf null, then the user has no subscription tier.\nOtherwise, then the user is paying for a subscription for has a default subscription.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2882,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2985,
                        "name": "userId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the user.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2846,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2989,
                            2988,
                            2987,
                            2990,
                            2986,
                            2992,
                            2991,
                            2985
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2842,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a authenticated user.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "AuthData\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2503,
            "order": 9999,
            "name": "BarcodeFormat",
            "reflection": {
                "id": 2503,
                "name": "BarcodeFormat",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The list of possible barcode formats.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "BarcodeFormat\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 774,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "code128"
                        },
                        {
                            "type": "literal",
                            "value": "code39"
                        },
                        {
                            "type": "literal",
                            "value": "ean13"
                        },
                        {
                            "type": "literal",
                            "value": "ean8"
                        },
                        {
                            "type": "literal",
                            "value": "upc"
                        },
                        {
                            "type": "literal",
                            "value": "itf14"
                        },
                        {
                            "type": "literal",
                            "value": "msi"
                        },
                        {
                            "type": "literal",
                            "value": "pharmacode"
                        },
                        {
                            "type": "literal",
                            "value": "codabar"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The list of possible barcode formats.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "BarcodeFormat\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2927,
            "order": 9999,
            "name": "BeginRecordingAction",
            "reflection": {
                "id": 2927,
                "name": "BeginRecordingAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to start audio recording.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "BeginRecordingAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2932,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to record audio.",
                            "text": "If the computer does not have an audio device attached, then setting this to true\nwill cause an error.\n\nIf an array is specified, only the specified audio sources will be recorded.\n\nDefaults to true.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2503,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                },
                                {
                                    "type": "array",
                                    "elementType": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": "screen"
                                            },
                                            {
                                                "type": "literal",
                                                "value": "microphone"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2772,
                            "name": "RecordingOptions.audio"
                        }
                    },
                    {
                        "id": 2930,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2934,
                        "name": "screen",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to record the screen.",
                            "text": "Defaults to false.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2520,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2774,
                            "name": "RecordingOptions.screen"
                        }
                    },
                    {
                        "id": 2929,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2928,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2530,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "begin_recording"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2931,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 2933,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to record video.",
                            "text": "If the computer does not have a video device attached (like a web cam),\nthen setting this to true will cause an error.\n\nDefaults to true.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2513,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2773,
                            "name": "RecordingOptions.video"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2932,
                            2930,
                            2934,
                            2929,
                            2928,
                            2931,
                            2933
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2529,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2771,
                        "name": "RecordingOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to start audio recording.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "BeginRecordingAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3052,
            "order": 9999,
            "name": "BufferFormAddressGLTFAction",
            "reflection": {
                "id": 3052,
                "name": "BufferFormAddressGLTFAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that requests the pre-caching of a GLTF mesh.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "BufferFormAddressGLTFAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3054,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address that should be buffered.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3086,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 3056,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3055,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3053,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3081,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "buffer_form_address_gltf"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3057,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3054,
                            3056,
                            3055,
                            3053,
                            3057
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3080,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that requests the pre-caching of a GLTF mesh.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "BufferFormAddressGLTFAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2651,
            "order": 9999,
            "name": "BufferSoundAction",
            "reflection": {
                "id": 2651,
                "name": "BufferSoundAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to pre-load a sound from the given URL.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "BufferSoundAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2655,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2654,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2652,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1262,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "buffer_sound"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2656,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 2653,
                        "name": "url",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL to buffer.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1267,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2655,
                            2654,
                            2652,
                            2656,
                            2653
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1261,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to pre-load a sound from the given URL.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "BufferSoundAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3025,
            "order": 9999,
            "name": "CalculateRayFromCameraAction",
            "reflection": {
                "id": 3025,
                "name": "CalculateRayFromCameraAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that calculates a ray for the given portal from the given viewport coordinates.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CalculateRayFromCameraAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3030,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3027,
                        "name": "portal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The portal that the ray should be calculated for.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3066,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "CameraPortal"
                        }
                    },
                    {
                        "id": 3029,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3026,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3061,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "calculate_camera_ray"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3031,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 3028,
                        "name": "viewportCoordinates",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The viewport coordinates that the ray should be calculated at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3071,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "Point2D"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3030,
                            3027,
                            3029,
                            3026,
                            3031,
                            3028
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3060,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that calculates a ray for the given portal from the given viewport coordinates.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CalculateRayFromCameraAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2502,
            "order": 9999,
            "name": "CameraType",
            "reflection": {
                "id": 2502,
                "name": "CameraType",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible camera types.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CameraType\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 567,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "front"
                        },
                        {
                            "type": "literal",
                            "value": "rear"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible camera types.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CameraType\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2657,
            "order": 9999,
            "name": "CancelSoundAction",
            "reflection": {
                "id": 2657,
                "name": "CancelSoundAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to cancel a sound that is playing.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CancelSoundAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2661,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2659,
                        "name": "soundID",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the sound.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1282,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2660,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2658,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1277,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "cancel_sound"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2662,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2661,
                            2659,
                            2660,
                            2658,
                            2662
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1276,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to cancel a sound that is playing.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CancelSoundAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3286,
            "order": 9999,
            "name": "CasualOSDevice",
            "reflection": {
                "id": 3286,
                "name": "AuxDevice",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Contains information about the device that AUX is running on.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CasualOSDevice\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3291,
                        "name": "ab1BootstrapUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL that AB-1 should be bootstraped from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                                "line": 34,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 3290,
                        "name": "allowCollaborationUpgrade",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether this device can enable collaboration features after the simulation has started.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                                "line": 29,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3289,
                        "name": "isCollaborative",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether this device has enabled collaboration features.",
                            "text": "When creating a simulation, this property may be used to enable or disable features that facilitate users interacting with each other.\nFor example, setting isCollaborative to false would make the shared partition act like a tempLocal partition.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                                "line": 24,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3287,
                        "name": "supportsAR",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the device supports augmented reality features.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                                "line": 11,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3288,
                        "name": "supportsVR",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the device supports virtual reality features.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                                "line": 16,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3291,
                            3290,
                            3289,
                            3287,
                            3288
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxDevice.ts",
                        "line": 7,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Contains information about the device that AUX is running on.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CasualOSDevice\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3278,
            "order": 9999,
            "name": "CasualOSVersion",
            "reflection": {
                "id": 3278,
                "name": "AuxVersion",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Contains information about the version of AUX that is running.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CasualOSVersion\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3284,
                        "name": "alpha",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether this version is an alpha (i.e. test) version.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 35,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                }
                            ]
                        }
                    },
                    {
                        "id": 3279,
                        "name": "hash",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The commit of the hash that AUX was built from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 10,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 3281,
                        "name": "major",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The major portion of the version.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 20,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3282,
                        "name": "minor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The minor portion of the version.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 25,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3283,
                        "name": "patch",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The patch portion of the version.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 30,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3285,
                        "name": "playerMode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Gets the player mode of this CasualOS version.",
                            "text": "- \"player\" indicates that the instance has been configured for experiencing AUXes.\n- \"builder\" indicates that the instance has been configured for building AUXes.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 43,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "player"
                                },
                                {
                                    "type": "literal",
                                    "value": "builder"
                                }
                            ]
                        }
                    },
                    {
                        "id": 3280,
                        "name": "version",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The full version number.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                                "line": 15,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3284,
                            3279,
                            3281,
                            3282,
                            3283,
                            3285,
                            3280
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxVersion.ts",
                        "line": 6,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Contains information about the version of AUX that is running.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CasualOSVersion\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3032,
            "order": 9999,
            "name": "ConfigureWakeLockAction",
            "reflection": {
                "id": 3032,
                "name": "ConfigureWakeLockAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to enable/disable wake lock.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ConfigureWakeLockAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3034,
                        "name": "enabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the wake lock should be enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3279,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3036,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3035,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3033,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3274,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "configure_wake_lock"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3037,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3034,
                            3036,
                            3035,
                            3033,
                            3037
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3273,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to enable/disable wake lock.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ConfigureWakeLockAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2415,
            "order": 9999,
            "name": "ConvertGeolocationToWhat3WordsAction",
            "reflection": {
                "id": 2415,
                "name": "ConvertGeolocationToWhat3WordsAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents an action that converts a geolocation (latitude and longitude) to a what3words address (see https://what3words.com/).",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ConvertGeolocationToWhat3WordsAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2422,
                        "name": "language",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The identifier of the language that should be used for the resulting what3words address.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2954,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2407,
                            "name": "ConvertGeolocationToWhat3WordsOptions.language"
                        }
                    },
                    {
                        "id": 2420,
                        "name": "latitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The latitude to convert.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2944,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2405,
                            "name": "ConvertGeolocationToWhat3WordsOptions.latitude"
                        }
                    },
                    {
                        "id": 2421,
                        "name": "longitude",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The longitude to convert.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2949,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2406,
                            "name": "ConvertGeolocationToWhat3WordsOptions.longitude"
                        }
                    },
                    {
                        "id": 2418,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2417,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2416,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2966,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "convert_geolocation_to_w3w"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2419,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2422,
                            2420,
                            2421,
                            2418,
                            2417,
                            2416,
                            2419
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2963,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2404,
                        "name": "ConvertGeolocationToWhat3WordsOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents an action that converts a geolocation (latitude and longitude) to a what3words address (see https://what3words.com/).",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ConvertGeolocationToWhat3WordsAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2884,
            "order": 9999,
            "name": "CustomAppContainerAvailableAction",
            "reflection": {
                "id": 2884,
                "name": "CustomAppContainerAvailableAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that registers a custom app container.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CustomAppContainerAvailableAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2885,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1983,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "custom_app_container_available"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2886,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2885,
                            2886
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1982,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that registers a custom app container.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CustomAppContainerAvailableAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2882,
            "order": 9999,
            "name": "CustomAppOutputType",
            "reflection": {
                "id": 2882,
                "name": "CustomAppOutputType",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The list of types of output that custom portals support.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CustomAppOutputType\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1966,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "literal",
                    "value": "html"
                }
            },
            "comment": {
                "shortText": "The list of types of output that custom portals support.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CustomAppOutputType\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2883,
            "order": 9999,
            "name": "CustomPortalOutputMode",
            "reflection": {
                "id": 2883,
                "name": "CustomPortalOutputMode",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "the list of modes that custom portals support.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "CustomPortalOutputMode\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1974,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "push"
                        },
                        {
                            "type": "literal",
                            "value": "pull"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "the list of modes that custom portals support.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "CustomPortalOutputMode\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2408,
            "order": 9999,
            "name": "DefineGlobalBotAction",
            "reflection": {
                "id": 2408,
                "name": "DefineGlobalBotAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that defines a global variable that points to the given bot.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "DefineGlobalBotAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2410,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the bot that should be defined.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2922,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2411,
                        "name": "name",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the global variable that should reference the bot.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2927,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2413,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2412,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2409,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2917,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "define_global_bot"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2414,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2410,
                            2411,
                            2413,
                            2412,
                            2409,
                            2414
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2916,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that defines a global variable that points to the given bot.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "DefineGlobalBotAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2663,
            "order": 9999,
            "name": "DownloadAction",
            "reflection": {
                "id": 2663,
                "name": "DownloadAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to download a file onto the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "DownloadAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2665,
                        "name": "data",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The data that should be included in the downloaded file.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1297,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "any"
                        }
                    },
                    {
                        "id": 2666,
                        "name": "filename",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the downloaded file. (includes the extension)",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1302,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2667,
                        "name": "mimeType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The MIME type of the downloaded file.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1307,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2664,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1292,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "download"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2668,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2665,
                            2666,
                            2667,
                            2664,
                            2668
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1291,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to download a file onto the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "DownloadAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2836,
            "order": 9999,
            "name": "EnableARAction",
            "reflection": {
                "id": 2836,
                "name": "EnableARAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that enables AR on the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnableARAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2838,
                        "name": "enabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether AR features should be enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1797,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2839,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The additional options that should be used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1802,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2706,
                            "name": "EnableXROptions"
                        }
                    },
                    {
                        "id": 2837,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1792,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "enable_ar"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2838,
                            2839,
                            2837
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1791,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that enables AR on the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnableARAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2795,
            "order": 9999,
            "name": "EnableCollaborationAction",
            "reflection": {
                "id": 2795,
                "name": "EnableCollaborationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to enable collaboration features.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnableCollaborationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2798,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2797,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2796,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1583,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "enable_collaboration"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2799,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2798,
                            2797,
                            2796,
                            2799
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1582,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to enable collaboration features.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnableCollaborationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2499,
            "order": 9999,
            "name": "EnableCustomDraggingAction",
            "reflection": {
                "id": 2499,
                "name": "EnableCustomDraggingAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to disable the default dragging logic (moving the bot) and enable\n\"onDragging\" shouts and whispers.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnableCustomDraggingAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2500,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2447,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "enable_custom_dragging"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2501,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2500,
                            2501
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2446,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to disable the default dragging logic (moving the bot) and enable\n\"onDragging\" shouts and whispers.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnableCustomDraggingAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2854,
            "order": 9999,
            "name": "EnablePOVAction",
            "reflection": {
                "id": 2854,
                "name": "EnablePOVAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that enables POV on the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnablePOVAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2857,
                        "name": "center",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The point that the camera should be placed at for POV.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1862,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2858,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2859,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1862,
                                                "character": 15
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2860,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1862,
                                                "character": 26
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2861,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1862,
                                                "character": 37
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2859,
                                            2860,
                                            2861
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2856,
                        "name": "enabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether POV features should be enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1857,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2862,
                        "name": "imu",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether IMU features should be enabled while in POV mode.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1867,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2855,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1852,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "enable_pov"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2857,
                            2856,
                            2862,
                            2855
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1851,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that enables POV on the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnablePOVAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2850,
            "order": 9999,
            "name": "EnableVRAction",
            "reflection": {
                "id": 2850,
                "name": "EnableVRAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that enables VR on the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnableVRAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2852,
                        "name": "enabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether VR features should be enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1837,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2853,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The additional options that should be used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1842,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2706,
                            "name": "EnableXROptions"
                        }
                    },
                    {
                        "id": 2851,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1832,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "enable_vr"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2852,
                            2853,
                            2851
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1831,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that enables VR on the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnableVRAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2706,
            "order": 9999,
            "name": "EnableXROptions",
            "reflection": {
                "id": 2706,
                "name": "EnableXROptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents the options that an EnableARAction or EnableVRAction can have.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EnableXROptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2707,
                        "name": "frameBufferScaleFactor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The frame buffer scale factor that should be used for the XR session.\n(see https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor)\n- Null or undefined indicates that the default should be used. (usually 1)\n- A number indicates the ratio of frame buffer pixels to output pixels. (e.g. a value of 2 will cause every 2 frame buffer pixels to be correlated with 1 output pixel, meaning that the render resolution is doubled)\n- \"recommended\" indicates that CasualOS should try to pick the optimal number.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1782,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                },
                                {
                                    "type": "literal",
                                    "value": "recommended"
                                }
                            ]
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2707
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1774,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents the options that an EnableARAction or EnableVRAction can have.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EnableXROptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2935,
            "order": 9999,
            "name": "EndRecordingAction",
            "reflection": {
                "id": 2935,
                "name": "EndRecordingAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to finish audio recording.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "EndRecordingAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2938,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2937,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2936,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2540,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "end_recording"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2939,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2938,
                            2937,
                            2936,
                            2939
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2539,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to finish audio recording.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "EndRecordingAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2869,
            "order": 9999,
            "name": "ExitFullscreenAction",
            "reflection": {
                "id": 2869,
                "name": "ExitFullscreenAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that exits fullscreen mode.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ExitFullscreenAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2870,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1908,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "exit_fullscreen_mode"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2870
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1907,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that exits fullscreen mode.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ExitFullscreenAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2453,
            "order": 9999,
            "name": "FocusOnOptions",
            "reflection": {
                "id": 2453,
                "name": "FocusOnOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Options for [`os.focusOn(bot, options)`](ref:os.focusOn-bot), and [`os.focusOn(position, options)`](ref:os.focusOn-position) actions.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "FocusOnOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2461,
                        "name": "columnNumber",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The column number that should be selected in the editor.\nOnly supported in the system portal, sheet portal, and tag portals.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 483,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2456,
                        "name": "duration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The duration in seconds that the animation should take.\nDefaults to 1.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 451,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2457,
                        "name": "easing",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The options for easing.\nCan be an \"easing type\" or an object that specifies the type and mode.\nIf an easing type is specified, then \"inout\" mode is used.\nIf omitted, then \"quadratic\" \"inout\" is used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 459,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "reference",
                                    "id": 2384,
                                    "name": "EaseType"
                                },
                                {
                                    "type": "reference",
                                    "id": 2386,
                                    "name": "Easing"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2463,
                        "name": "endIndex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The index of the last character that should be selected.\nOnly supported in the system portal, sheet portal, and tag portals.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 495,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2460,
                        "name": "lineNumber",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The line number that should be selected in the editor.\nOnly supported in the system portal, sheet portal, and tag portals.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 477,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2464,
                        "name": "portal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The portal that the bot should be focused in.\nIf not specified, then the bot will be focused in all the portals it is in. (bot, mini and menu)\nUseful if a bot is in two portals but you only want to focus it in one portal.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 502,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2455,
                        "name": "rotation",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 445,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2465,
                            "name": "FocusOnRotation"
                        }
                    },
                    {
                        "id": 2459,
                        "name": "space",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The tag space that should be focused.\nOnly supported in the system portal, sheet portal, and tag portals.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 471,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2462,
                        "name": "startIndex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The index of the first character that should be selected.\nOnly supported in the system portal, sheet portal, and tag portals.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 489,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2458,
                        "name": "tag",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The tag that should be focused.\nOnly supported in the system portal.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 465,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2454,
                        "name": "zoom",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 438,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2461,
                            2456,
                            2457,
                            2463,
                            2460,
                            2464,
                            2455,
                            2459,
                            2462,
                            2458,
                            2454
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 430,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2341,
                        "name": "FocusOnBotAction"
                    },
                    {
                        "type": "reference",
                        "id": 2358,
                        "name": "FocusOnPositionAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Options for {@link os.focusOn-bot}, and {@link os.focusOn-position} actions.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "FocusOnOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2465,
            "order": 9999,
            "name": "FocusOnRotation",
            "reflection": {
                "id": 2465,
                "name": "FocusOnRotation",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a rotation in polar coordinates for use with [`os.focusOn(bot, options)`](ref:os.focusOn-bot).",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "FocusOnRotation\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2468,
                        "name": "normalize",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to normalize the rotation. Normalized rotations are clamped to between 0 and Math.PI*2.\nYou can set this to false to allow using angles more than Math.PI*2. This would allow the camera to rotate around an object multiple times.\nDefaults to true.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 520,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2466,
                        "name": "x",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 512,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2467,
                        "name": "y",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 513,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2468,
                            2466,
                            2467
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 511,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a rotation in polar coordinates for use with {@link os.focusOn-bot}.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "FocusOnRotation\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2751,
            "order": 9999,
            "name": "FormAnimationData",
            "reflection": {
                "id": 2751,
                "name": "FormAnimationData",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that contains animation information.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "FormAnimationData\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2754,
                        "name": "duration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The duration of the animation in miliseconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3251,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2753,
                        "name": "index",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The index that the animation is at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3246,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2752,
                        "name": "name",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the animation.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3241,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2754,
                            2753,
                            2752
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3237,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that contains animation information.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "FormAnimationData\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3005,
            "order": 9999,
            "name": "GetAverageFrameRateAction",
            "reflection": {
                "id": 3005,
                "name": "GetAverageFrameRateAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that retrieves the current average frame rate.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetAverageFrameRateAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3008,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3007,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3006,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3006,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "get_average_frame_rate"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3009,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3008,
                            3007,
                            3006,
                            3009
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3005,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that retrieves the current average frame rate.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetAverageFrameRateAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2968,
            "order": 9999,
            "name": "GetGeolocationAction",
            "reflection": {
                "id": 2968,
                "name": "GetGeolocationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to retrieve the current geolocation of the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetGeolocationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2971,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2970,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2969,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2655,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "get_geolocation"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2972,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2971,
                            2970,
                            2969,
                            2972
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2654,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to retrieve the current geolocation of the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetGeolocationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1938,
            "order": 9999,
            "name": "GetRoomOptionsFailure",
            "reflection": {
                "id": 1938,
                "name": "GetRoomOptionsFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"get room options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomOptionsFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1940,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2378,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1941,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2383,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1939,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2373,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1940,
                            1941,
                            1939
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2372,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"get room options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomOptionsFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1933,
            "order": 9999,
            "name": "GetRoomOptionsResult",
            "reflection": {
                "id": 1933,
                "name": "GetRoomOptionsResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"get room options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomOptionsResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2343,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1934,
                            "name": "GetRoomOptionsSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1938,
                            "name": "GetRoomOptionsFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"get room options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomOptionsResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1934,
            "order": 9999,
            "name": "GetRoomOptionsSuccess",
            "reflection": {
                "id": 1934,
                "name": "GetRoomOptionsSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"get room options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomOptionsSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1937,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options that were retrieved.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2363,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3070,
                            "name": "RoomOptions"
                        }
                    },
                    {
                        "id": 1936,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2358,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1935,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2354,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1937,
                            1936,
                            1935
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2353,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"get room options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomOptionsSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1981,
            "order": 9999,
            "name": "GetRoomRemoteOptionsFailure",
            "reflection": {
                "id": 1981,
                "name": "GetRoomRemoteOptionsFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"get room remote options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomRemoteOptionsFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1983,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2562,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1984,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2567,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1986,
                        "name": "remoteId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the remote that the options were attempted to be retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2577,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1985,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were attempted to be retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2572,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1982,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2557,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1983,
                            1984,
                            1986,
                            1985,
                            1982
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2556,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"get room remote options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomRemoteOptionsFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1975,
            "order": 9999,
            "name": "GetRoomRemoteOptionsResult",
            "reflection": {
                "id": 1975,
                "name": "GetRoomRemoteOptionsResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"get room remote options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomRemoteOptionsResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2521,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1976,
                            "name": "GetRoomRemoteOptionsSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1981,
                            "name": "GetRoomRemoteOptionsFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"get room remote options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomRemoteOptionsResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1976,
            "order": 9999,
            "name": "GetRoomRemoteOptionsSuccess",
            "reflection": {
                "id": 1976,
                "name": "GetRoomRemoteOptionsSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"get room remote options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomRemoteOptionsSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1980,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options that were retrieved.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2547,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3086,
                            "name": "RoomRemoteOptions"
                        }
                    },
                    {
                        "id": 1979,
                        "name": "remoteId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the remote that the options were retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2542,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1978,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2537,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1977,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2532,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1980,
                            1979,
                            1978,
                            1977
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2531,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"get room remote options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomRemoteOptionsSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1957,
            "order": 9999,
            "name": "GetRoomTrackOptionsFailure",
            "reflection": {
                "id": 1957,
                "name": "GetRoomTrackOptionsFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"get room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomTrackOptionsFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1962,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address of the track that the options were attempted to be retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2447,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1959,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2432,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1960,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2437,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1961,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were attempted to be retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2442,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1958,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2427,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1962,
                            1959,
                            1960,
                            1961,
                            1958
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2426,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"get room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomTrackOptionsFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1951,
            "order": 9999,
            "name": "GetRoomTrackOptionsResult",
            "reflection": {
                "id": 1951,
                "name": "GetRoomTrackOptionsResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"get room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomTrackOptionsResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2392,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1952,
                            "name": "GetRoomTrackOptionsSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1957,
                            "name": "GetRoomTrackOptionsFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"get room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomTrackOptionsResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1952,
            "order": 9999,
            "name": "GetRoomTrackOptionsSuccess",
            "reflection": {
                "id": 1952,
                "name": "GetRoomTrackOptionsSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"get room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetRoomTrackOptionsSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1955,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address of the track that the options were retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2412,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1956,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options that were retrieved.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2417,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3074,
                            "name": "RoomTrackOptions"
                        }
                    },
                    {
                        "id": 1954,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2407,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1953,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2403,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1955,
                            1956,
                            1954,
                            1953
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2402,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"get room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetRoomTrackOptionsSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2963,
            "order": 9999,
            "name": "GetVoicesAction",
            "reflection": {
                "id": 2963,
                "name": "GetVoicesAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to retrieve the synthetic voices that are supported by the current system.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetVoicesAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2966,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2965,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2964,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2622,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "get_voices"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2967,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2966,
                            2965,
                            2964,
                            2967
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2621,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to retrieve the synthetic voices that are supported by the current system.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetVoicesAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3038,
            "order": 9999,
            "name": "GetWakeLockConfigurationAction",
            "reflection": {
                "id": 3038,
                "name": "GetWakeLockConfigurationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to retrieve the current wake lock configuration.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GetWakeLockConfigurationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3041,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3040,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3039,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3289,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "get_wake_lock_configuration"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3042,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3041,
                            3040,
                            3039,
                            3042
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3288,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to retrieve the current wake lock configuration.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GetWakeLockConfigurationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2973,
            "order": 9999,
            "name": "GoToTagAction",
            "reflection": {
                "id": 2973,
                "name": "GoToTagAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that tells the IDE portal to open the given bot and tag.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "GoToTagAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2975,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the bot.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2807,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2977,
                        "name": "space",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The space to open.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2817,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2976,
                        "name": "tag",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The tag to open.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2812,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2974,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2802,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "go_to_tag"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2975,
                            2977,
                            2976,
                            2974
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2801,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that tells the IDE portal to open the given bot and tag.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "GoToTagAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2315,
            "order": 9999,
            "name": "HtmlAppEventAction",
            "reflection": {
                "id": 2315,
                "name": "HtmlAppEventAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that represents an event that was dispatched from HTML in a portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "HtmlAppEventAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2317,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2119,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2318,
                        "name": "event",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The event.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2124,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "any"
                        }
                    },
                    {
                        "id": 2316,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2114,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "html_app_event"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2319,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2317,
                            2318,
                            2316,
                            2319
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2113,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that represents an event that was dispatched from HTML in a portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "HtmlAppEventAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2320,
            "order": 9999,
            "name": "HtmlAppMethodCallAction",
            "reflection": {
                "id": 2320,
                "name": "HtmlAppMethodCallAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that represents a method call that was dispatched from HTML in a portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "HtmlAppMethodCallAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2322,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2139,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2325,
                        "name": "args",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The arguments that the method was called with.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2154,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "any"
                            }
                        }
                    },
                    {
                        "id": 2324,
                        "name": "methodName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the method.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2149,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2323,
                        "name": "nodeId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the node that the method was called on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2144,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2327,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2326,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2321,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2134,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "html_app_method_call"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2328,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2322,
                            2325,
                            2324,
                            2323,
                            2327,
                            2326,
                            2321,
                            2328
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2133,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that represents a method call that was dispatched from HTML in a portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "HtmlAppMethodCallAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2504,
            "order": 9999,
            "name": "ImageClassifierOptions",
            "reflection": {
                "id": 2504,
                "name": "ImageClassifierOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a set of options for [`os.openImageClassifier(options)`](ref:os.openImageClassifier).",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ImageClassifierOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2508,
                        "name": "cameraType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The camera that should be used for the image classifier.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 850,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2502,
                            "name": "CameraType"
                        }
                    },
                    {
                        "id": 2506,
                        "name": "modelJsonUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The URL that the model JSON should be loaded from.\nNot required. Can be used if you are storing the model JSON in a custom location.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 839,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2507,
                        "name": "modelMetadataUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The URL that the model metadata should be loaded from.\nNot required. Can be used if you are storing the model metadata in a custom location.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 845,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2505,
                        "name": "modelUrl",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The URL that the model should be loaded from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 833,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2508,
                            2506,
                            2507,
                            2505
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 829,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2566,
                        "name": "OpenImageClassifierAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a set of options for {@link os.openImageClassifier}.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ImageClassifierOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3292,
            "order": 9999,
            "name": "InstUpdate",
            "reflection": {
                "id": 3292,
                "name": "InstUpdate",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents an update that has been applied to an inst.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "InstUpdate\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3293,
                        "name": "id",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the update.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/StoredAux.ts",
                                "line": 26,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3295,
                        "name": "timestamp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The time that the update occurred at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/StoredAux.ts",
                                "line": 36,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3294,
                        "name": "update",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The update content.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/StoredAux.ts",
                                "line": 31,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3293,
                            3295,
                            3294
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/StoredAux.ts",
                        "line": 22,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents an update that has been applied to an inst.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "InstUpdate\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1919,
            "order": 9999,
            "name": "JoinRoomFailure",
            "reflection": {
                "id": 1919,
                "name": "JoinRoomFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"join room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "JoinRoomFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1922,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2236,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1923,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2241,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1921,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that was attempted to be joined.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2231,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1920,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2226,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1922,
                            1923,
                            1921,
                            1920
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2225,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"join room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "JoinRoomFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1915,
            "order": 9999,
            "name": "JoinRoomResult",
            "reflection": {
                "id": 1915,
                "name": "JoinRoomResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"join room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "JoinRoomResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2203,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1916,
                            "name": "JoinRoomSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1919,
                            "name": "JoinRoomFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"join room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "JoinRoomResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1916,
            "order": 9999,
            "name": "JoinRoomSuccess",
            "reflection": {
                "id": 1916,
                "name": "JoinRoomSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"join room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "JoinRoomSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1918,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that was joined.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2216,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1917,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2212,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1918,
                            1917
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2211,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"join room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "JoinRoomSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1928,
            "order": 9999,
            "name": "LeaveRoomFailure",
            "reflection": {
                "id": 1928,
                "name": "LeaveRoomFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"leave room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LeaveRoomFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1931,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2283,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1932,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2288,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1930,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that was attempted to be left.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2279,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1929,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2274,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1931,
                            1932,
                            1930,
                            1929
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2273,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"leave room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LeaveRoomFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1924,
            "order": 9999,
            "name": "LeaveRoomResult",
            "reflection": {
                "id": 1924,
                "name": "LeaveRoomResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"leave room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LeaveRoomResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2250,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1925,
                            "name": "LeaveRoomSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1928,
                            "name": "LeaveRoomFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"leave room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LeaveRoomResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1925,
            "order": 9999,
            "name": "LeaveRoomSuccess",
            "reflection": {
                "id": 1925,
                "name": "LeaveRoomSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"leave room\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LeaveRoomSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1927,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that was left.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2264,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1926,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2259,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1927,
                            1926
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2258,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"leave room\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LeaveRoomSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2755,
            "order": 9999,
            "name": "ListFormAnimationsAction",
            "reflection": {
                "id": 2755,
                "name": "ListFormAnimationsAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that retrieves a list of animations for a given form or bot.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ListFormAnimationsAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2757,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address that the animations should be retrieved from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3228,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2759,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2758,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2756,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3223,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "list_form_animations"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2760,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2757,
                            2759,
                            2758,
                            2756,
                            2760
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3222,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that retrieves a list of animations for a given form or bot.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ListFormAnimationsAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2800,
            "order": 9999,
            "name": "LoadBotsAction",
            "reflection": {
                "id": 2800,
                "name": "LoadBotsAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that loads bots from the given space that match the given tags and values.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LoadBotsAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2805,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2802,
                        "name": "space",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The space that should be searched.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1598,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2803,
                        "name": "tags",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The tags that the loaded bots should have.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1603,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "TagFilter"
                            }
                        }
                    },
                    {
                        "id": 2804,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2801,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1593,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "load_bots"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2806,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2805,
                            2802,
                            2803,
                            2804,
                            2801,
                            2806
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1592,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that loads bots from the given space that match the given tags and values.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LoadBotsAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2696,
            "order": 9999,
            "name": "LoadSpaceAction",
            "reflection": {
                "id": 2696,
                "name": "LoadSpaceAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that loads a space into the instance.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LoadSpaceAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2699,
                        "name": "config",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The config that should be used to load the space.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1573,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "any"
                        }
                    },
                    {
                        "id": 2701,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Partial.playerId"
                        }
                    },
                    {
                        "id": 2698,
                        "name": "space",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The space that should be loaded.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1568,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3245,
                            "name": "Space"
                        }
                    },
                    {
                        "id": 2700,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Partial.taskId"
                        }
                    },
                    {
                        "id": 2697,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1563,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "load_space"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Partial.type"
                        }
                    },
                    {
                        "id": 2702,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Partial.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2699,
                            2701,
                            2698,
                            2700,
                            2697,
                            2702
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1562,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "reference",
                                "name": "AsyncAction"
                            }
                        ],
                        "qualifiedName": "Partial",
                        "package": "typescript",
                        "name": "Partial"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that loads a space into the instance.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LoadSpaceAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2807,
            "order": 9999,
            "name": "LocalFormAnimationAction",
            "reflection": {
                "id": 2807,
                "name": "LocalFormAnimationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that runs an animation locally over\nwhatever existing animations are playing.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LocalFormAnimationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2810,
                        "name": "animation",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The animation to run.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1655,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2809,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The bot to run the animation on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1650,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2808,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1645,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "local_form_animation"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2810,
                            2809,
                            2808
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1644,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that runs an animation locally over\nwhatever existing animations are playing.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LocalFormAnimationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2821,
            "order": 9999,
            "name": "LocalPositionTweenAction",
            "reflection": {
                "id": 2821,
                "name": "LocalPositionTweenAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that runs a position tween locally.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LocalPositionTweenAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2829,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The bot to run the tween on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1724,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2813,
                            "name": "LocalTweenAction.botId"
                        }
                    },
                    {
                        "id": 2830,
                        "name": "dimension",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The dimension that the bot should be tweened in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1729,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2814,
                            "name": "LocalTweenAction.dimension"
                        }
                    },
                    {
                        "id": 2832,
                        "name": "duration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The duration of the tween in seconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1744,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2817,
                            "name": "LocalTweenAction.duration"
                        }
                    },
                    {
                        "id": 2831,
                        "name": "easing",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The easing that should be used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1739,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2386,
                            "name": "Easing"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2816,
                            "name": "LocalTweenAction.easing"
                        }
                    },
                    {
                        "id": 2834,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2819,
                            "name": "LocalTweenAction.playerId"
                        }
                    },
                    {
                        "id": 2823,
                        "name": "position",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The target position of the tween.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1759,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2824,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2825,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                            "isOptional": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1759,
                                                "character": 16
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2826,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                            "isOptional": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1759,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2827,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                            "isOptional": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 1759,
                                                "character": 40
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2825,
                                            2826,
                                            2827
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2833,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2818,
                            "name": "LocalTweenAction.taskId"
                        }
                    },
                    {
                        "id": 2822,
                        "name": "tweenType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of the tween.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1754,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "position"
                        },
                        "overwrites": {
                            "type": "reference",
                            "id": 2815,
                            "name": "LocalTweenAction.tweenType"
                        }
                    },
                    {
                        "id": 2828,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1719,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "local_tween"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2812,
                            "name": "LocalTweenAction.type"
                        }
                    },
                    {
                        "id": 2835,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2820,
                            "name": "LocalTweenAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2829,
                            2830,
                            2832,
                            2831,
                            2834,
                            2823,
                            2833,
                            2822,
                            2828,
                            2835
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1753,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "id": 2811,
                        "name": "LocalTweenAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that runs a position tween locally.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LocalPositionTweenAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2811,
            "order": 9999,
            "name": "LocalTweenAction",
            "reflection": {
                "id": 2811,
                "name": "LocalTweenAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that runs a tween locally.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "LocalTweenAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2813,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The bot to run the tween on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1724,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2814,
                        "name": "dimension",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The dimension that the bot should be tweened in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1729,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2817,
                        "name": "duration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The duration of the tween in seconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1744,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2816,
                        "name": "easing",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The easing that should be used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1739,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2386,
                            "name": "Easing"
                        }
                    },
                    {
                        "id": 2819,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2818,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2815,
                        "name": "tweenType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of the tween.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1734,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "TweenType"
                        }
                    },
                    {
                        "id": 2812,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1719,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "local_tween"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2820,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2813,
                            2814,
                            2817,
                            2816,
                            2819,
                            2818,
                            2815,
                            2812,
                            2820
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1718,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2821,
                        "name": "LocalPositionTweenAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that runs a tween locally.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "LocalTweenAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2998,
            "order": 9999,
            "name": "MediaPermissionAction",
            "reflection": {
                "id": 2998,
                "name": "MediaPermissionAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that gets permission for audio and/or video.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "MediaPermissionAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3003,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Should include audio permission.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2979,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2704,
                            "name": "MediaPermssionOptions.audio"
                        }
                    },
                    {
                        "id": 3001,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3000,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2999,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2996,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "media_permission"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3002,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 3004,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Should include video permission.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2984,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2705,
                            "name": "MediaPermssionOptions.video"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3003,
                            3001,
                            3000,
                            2999,
                            3002,
                            3004
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2993,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2703,
                        "name": "MediaPermissionOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that gets permission for audio and/or video.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "MediaPermissionAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2703,
            "order": 9999,
            "name": "MediaPermissionOptions",
            "reflection": {
                "id": 2703,
                "name": "MediaPermssionOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents options for requesting media permissions.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "MediaPermissionOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2704,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Should include audio permission.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2979,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2705,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Should include video permission.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2984,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2704,
                            2705
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2975,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2998,
                        "name": "MediaPermissionAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents options for requesting media permissions.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "MediaPermissionOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2940,
            "order": 9999,
            "name": "MeetCommandAction",
            "reflection": {
                "id": 2940,
                "name": "MeetCommandAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to send a command to the Jitsi Meet API.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "MeetCommandAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2943,
                        "name": "args",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The arguments for the command (if any).",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2560,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "any"
                            }
                        }
                    },
                    {
                        "id": 2942,
                        "name": "command",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the command to execute.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2555,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2945,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2944,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2941,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2550,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "meet_command"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2946,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2943,
                            2942,
                            2945,
                            2944,
                            2941,
                            2946
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2549,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to send a command to the Jitsi Meet API.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "MeetCommandAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2947,
            "order": 9999,
            "name": "MeetFunctionAction",
            "reflection": {
                "id": 2947,
                "name": "MeetFunctionAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to call Jitsi Meet functions.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "MeetFunctionAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2950,
                        "name": "args",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The arguments for the function (if any).",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2580,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "any"
                            }
                        }
                    },
                    {
                        "id": 2949,
                        "name": "functionName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the function to execute.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2575,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2952,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2951,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2948,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2570,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "meet_function"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2953,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2950,
                            2949,
                            2952,
                            2951,
                            2948,
                            2953
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2569,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to call Jitsi Meet functions.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "MeetFunctionAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2917,
            "order": 9999,
            "name": "OpenCircleWipeAction",
            "reflection": {
                "id": 2917,
                "name": "OpenCircleWipeAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to show or hide the circle wipe.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "OpenCircleWipeAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2919,
                        "name": "open",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the circle wipe should be visible.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2238,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2920,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options for the circle wipe.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2243,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2924,
                            "name": "OpenCircleWipeOptions"
                        }
                    },
                    {
                        "id": 2922,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2921,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2918,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2233,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_circle_wipe"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2923,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2919,
                            2920,
                            2922,
                            2921,
                            2918,
                            2923
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2232,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to show or hide the circle wipe.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "OpenCircleWipeAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2924,
            "order": 9999,
            "name": "OpenCircleWipeOptions",
            "reflection": {
                "id": 2924,
                "name": "OpenCircleWipeOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "The options for the circle wipe.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "OpenCircleWipeOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2926,
                        "name": "color",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The color that the circle wipe should be.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2261,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2925,
                        "name": "duration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The duration of this half of the circle wipe animation in seconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2256,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2926,
                            2925
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2252,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "The options for the circle wipe.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "OpenCircleWipeOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2640,
            "order": 9999,
            "name": "OpenURLAction",
            "reflection": {
                "id": 2640,
                "name": "OpenURLAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to open the given URL.\nThis should be equivalent to clicking a link with rel=\"noreferrer\" and target=\"_blank\".",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "OpenURLAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2641,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1227,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "open_url"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2643,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    },
                    {
                        "id": 2642,
                        "name": "url",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL to open.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1232,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2641,
                            2643,
                            2642
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1226,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to open the given URL.\nThis should be equivalent to clicking a link with rel=\"noreferrer\" and target=\"_blank\".",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "OpenURLAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2644,
            "order": 9999,
            "name": "PlaySoundAction",
            "reflection": {
                "id": 2644,
                "name": "PlaySoundAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to play a sound from the given url.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "PlaySoundAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2649,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2647,
                        "name": "soundID",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the sound.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1252,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2648,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2645,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1241,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "play_sound"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2650,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 2646,
                        "name": "url",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The URL to open.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1246,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2649,
                            2647,
                            2648,
                            2645,
                            2650,
                            2646
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1240,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to play a sound from the given url.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "PlaySoundAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3010,
            "order": 9999,
            "name": "RaycastFromCameraAction",
            "reflection": {
                "id": 3010,
                "name": "RaycastFromCameraAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that performs a raycast from the camera in the given portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RaycastFromCameraAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3015,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3012,
                        "name": "portal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The portal that the raycast should be performed in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3021,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "CameraPortal"
                        }
                    },
                    {
                        "id": 3014,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3011,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3016,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "raycast_from_camera"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3016,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 3013,
                        "name": "viewportCoordinates",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The viewport coordinates that the raycast should be at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3026,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "Point2D"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3015,
                            3012,
                            3014,
                            3011,
                            3016,
                            3013
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3015,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that performs a raycast from the camera in the given portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RaycastFromCameraAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3017,
            "order": 9999,
            "name": "RaycastInPortalAction",
            "reflection": {
                "id": 3017,
                "name": "RaycastInPortalAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that performs a raycast for the given ray in the given portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RaycastInPortalAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3021,
                        "name": "direction",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The 3D direction that the raycast should be performed in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3051,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "Point3D"
                        }
                    },
                    {
                        "id": 3020,
                        "name": "origin",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The 3D position that the raycast should be performed at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3046,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "Point3D"
                        }
                    },
                    {
                        "id": 3023,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 3019,
                        "name": "portal",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The portal that the raycast should be performed in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3041,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "CameraPortal"
                        }
                    },
                    {
                        "id": 3022,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 3018,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3036,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "raycast_in_portal"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 3024,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3021,
                            3020,
                            3023,
                            3019,
                            3022,
                            3018,
                            3024
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3035,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that performs a raycast for the given ray in the given portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RaycastInPortalAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1912,
            "order": 9999,
            "name": "RaycastRay",
            "reflection": {
                "id": 1912,
                "name": "RaycastRay",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a ray. That is, a line that has a start position and a direction, but no end.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RaycastRay\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1914,
                        "name": "direction",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The direction that the ray travels in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2764,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3627,
                            "name": "Vector3"
                        }
                    },
                    {
                        "id": 1913,
                        "name": "origin",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The origin of the ray.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2759,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3627,
                            "name": "Vector3"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1914,
                            1913
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2755,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a ray. That is, a line that has a start position and a direction, but no end.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RaycastRay\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1909,
            "order": 9999,
            "name": "RaycastResult",
            "reflection": {
                "id": 1909,
                "name": "RaycastResult",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents the result of a raycast operation.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RaycastResult\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1910,
                        "name": "botIntersections",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The list of intersections.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2696,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "BotIntersection"
                            }
                        }
                    },
                    {
                        "id": 1911,
                        "name": "ray",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ray that the operation sent.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2701,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 1912,
                            "name": "RaycastRay"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1910,
                            1911
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2692,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents the result of a raycast operation.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RaycastResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2879,
            "order": 9999,
            "name": "RegisterBuiltinPortalAction",
            "reflection": {
                "id": 2879,
                "name": "RegisterBuiltinPortalAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that ensures a portal bot has been created for a portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RegisterBuiltinPortalAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2881,
                        "name": "portalId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the portal.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1957,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2880,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1952,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "register_builtin_portal"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2881,
                            2880
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1951,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that ensures a portal bot has been created for a portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RegisterBuiltinPortalAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2887,
            "order": 9999,
            "name": "RegisterCustomAppAction",
            "reflection": {
                "id": 2887,
                "name": "RegisterCustomAppAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that registers a custom portal.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RegisterCustomAppAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2889,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1998,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2890,
                        "name": "botId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the bot that should be used to configure the portal.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2003,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2892,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2891,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2888,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1993,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "register_custom_app"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2893,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2889,
                            2890,
                            2892,
                            2891,
                            2888,
                            2893
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1992,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that registers a custom portal.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RegisterCustomAppAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2900,
            "order": 9999,
            "name": "RegisterHtmlAppAction",
            "reflection": {
                "id": 2900,
                "name": "RegisterHtmlAppAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that requests that a HTML app be created.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RegisterHtmlAppAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2902,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2033,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2903,
                        "name": "instanceId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app instance.\nUsed to distinguish between multiple instances of the same app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2039,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2905,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2904,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2901,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2028,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "register_html_app"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2906,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2902,
                            2903,
                            2905,
                            2904,
                            2901,
                            2906
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2027,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that requests that a HTML app be created.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RegisterHtmlAppAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2669,
            "order": 9999,
            "name": "RejectAction",
            "reflection": {
                "id": 2669,
                "name": "RejectAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that prevents the execution of an action.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RejectAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2671,
                        "name": "actions",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The actions to prevent.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1430,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "Action"
                            }
                        }
                    },
                    {
                        "id": 2670,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1425,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "reject"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2671,
                            2670
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1424,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that prevents the execution of an action.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RejectAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2978,
            "order": 9999,
            "name": "RequestAuthDataAction",
            "reflection": {
                "id": 2978,
                "name": "RequestAuthDataAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that requests a Auth data from the OS.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RequestAuthDataAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2982,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2980,
                        "name": "requestInBackground",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the request should be limited to the background.\nDefaults to false.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2833,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2981,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2979,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2827,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "request_auth_data"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2983,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2982,
                            2980,
                            2981,
                            2979,
                            2983
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2826,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that requests a Auth data from the OS.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RequestAuthDataAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2867,
            "order": 9999,
            "name": "RequestFullscreenAction",
            "reflection": {
                "id": 2867,
                "name": "RequestFullscreenAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that requests that AUX enter fullscreen mode.\nThis can be denied by the user.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RequestFullscreenAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2868,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1898,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "request_fullscreen_mode"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2868
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1897,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that requests that AUX enter fullscreen mode.\nThis can be denied by the user.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RequestFullscreenAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3061,
            "order": 9999,
            "name": "RoomJoinOptions",
            "reflection": {
                "id": 3061,
                "name": "RoomJoinOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines a set of options that the local usr can specify when joining a room.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RoomJoinOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3066,
                        "name": "adaptiveStream",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to enable adaptive streaming. Alternatively accepts an object with properties from this page: https://docs.livekit.io/client-sdk-js/modules.html#AdaptiveStreamSettings",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 804,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "object"
                                }
                            ]
                        }
                    },
                    {
                        "id": 3068,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream audio.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 761,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 3072,
                            "name": "RoomOptions.audio"
                        }
                    },
                    {
                        "id": 3062,
                        "name": "audioCaptureDefaults",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The defaults that should be used for recording audio.\nShould be an object.\nSee https://docs.livekit.io/client-sdk-js/interfaces/AudioCaptureOptions.html for a full list of properties.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 781,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "object"
                        }
                    },
                    {
                        "id": 3065,
                        "name": "dynacast",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to enable dynacast.\nSee https://docs.livekit.io/client-sdk-js/interfaces/RoomOptions.html#dynacast for more info.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 799,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3064,
                        "name": "publishDefaults",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The defaults that should be used for uploading audio/video content.\nSee https://docs.livekit.io/client-sdk-js/interfaces/TrackPublishDefaults.html for a full list of properties.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 793,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "object"
                        }
                    },
                    {
                        "id": 3069,
                        "name": "screen",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream the screen.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 766,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 3073,
                            "name": "RoomOptions.screen"
                        }
                    },
                    {
                        "id": 3067,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 756,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 3071,
                            "name": "RoomOptions.video"
                        }
                    },
                    {
                        "id": 3063,
                        "name": "videoCaptureDefaults",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The defaults that should be used for recording video. Should be an object.\nSee https://docs.livekit.io/client-sdk-js/interfaces/VideoCaptureOptions.html for a full list of properties.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 787,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "object"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3066,
                            3068,
                            3062,
                            3065,
                            3064,
                            3069,
                            3067,
                            3063
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                        "line": 775,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "id": 3070,
                        "name": "RoomOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines a set of options that the local usr can specify when joining a room.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RoomJoinOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3070,
            "order": 9999,
            "name": "RoomOptions",
            "reflection": {
                "id": 3070,
                "name": "RoomOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines a set of options that the local user can have for a room.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RoomOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3072,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream audio.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 761,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3073,
                        "name": "screen",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream the screen.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 766,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3071,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether to stream video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 756,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3072,
                            3073,
                            3071
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                        "line": 752,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 3061,
                        "name": "RoomJoinOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines a set of options that the local user can have for a room.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RoomOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3086,
            "order": 9999,
            "name": "RoomRemoteOptions",
            "reflection": {
                "id": 3086,
                "name": "RoomRemoteOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that contains options for a remote room user.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RoomRemoteOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3089,
                        "name": "audio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the remote user has enabled their microphone audio.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 974,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3091,
                        "name": "audioLevel",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The audio level that is being transmitted by the user.\nBetween 0 and 1 with 1 being the loudest and 0 being the quietest.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 985,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3087,
                        "name": "connectionQuality",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Gets the connection quality of the remote user.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 964,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "unknown"
                                },
                                {
                                    "type": "literal",
                                    "value": "excellent"
                                },
                                {
                                    "type": "literal",
                                    "value": "good"
                                },
                                {
                                    "type": "literal",
                                    "value": "poor"
                                }
                            ]
                        }
                    },
                    {
                        "id": 3090,
                        "name": "screen",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the remote user has enabled their screen share.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 979,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3088,
                        "name": "video",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the remote user has enabled their camera video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 969,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3089,
                            3091,
                            3087,
                            3090,
                            3088
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                        "line": 960,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that contains options for a remote room user.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RoomRemoteOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3074,
            "order": 9999,
            "name": "RoomTrackOptions",
            "reflection": {
                "id": 3074,
                "name": "RoomTrackOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents the options that a audio/video track has.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RoomTrackOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3085,
                        "name": "aspectRatio",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The aspect ratio of the video if the track represents a video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 919,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 3081,
                        "name": "dimensions",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The dimensions of the video if the track represents a video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 914,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 3082,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 3084,
                                        "name": "height",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                                "line": 914,
                                                "character": 34
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 3083,
                                        "name": "width",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                                "line": 914,
                                                "character": 19
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            3084,
                                            3083
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 3075,
                        "name": "isRemote",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the track is being sourced from a remote user.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 884,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3078,
                        "name": "kind",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of the track.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 899,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "TrackKind"
                        }
                    },
                    {
                        "id": 3077,
                        "name": "muted",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the track is muted locally.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 894,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3076,
                        "name": "remoteId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the remote that is publishing this track.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 889,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 3079,
                        "name": "source",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The source of the track.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 904,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "TrackSource"
                        }
                    },
                    {
                        "id": 3080,
                        "name": "videoQuality",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The video quality of the track if the track represents video.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 909,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "TrackVideoQuality"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3085,
                            3081,
                            3075,
                            3078,
                            3077,
                            3076,
                            3079,
                            3080
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                        "line": 880,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents the options that a audio/video track has.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RoomTrackOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2683,
            "order": 9999,
            "name": "RunScriptAction",
            "reflection": {
                "id": 2683,
                "name": "RunScriptAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that executes a script.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "RunScriptAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2687,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2685,
                        "name": "script",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The script that should be executed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1533,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2686,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2684,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1528,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "run_script"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2688,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2687,
                            2685,
                            2686,
                            2684,
                            2688
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1527,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that executes a script.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "RunScriptAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2329,
            "order": 9999,
            "name": "SerializableMutationRecord",
            "reflection": {
                "id": 2329,
                "name": "SerializableMutationRecord",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines a mutation record that can be serialized and sent over a web worker pipe.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SerializableMutationRecord\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2332,
                        "name": "addedNodes",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2166,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "NodeReference"
                            }
                        }
                    },
                    {
                        "id": 2336,
                        "name": "attributeName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2172,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2337,
                        "name": "attributeNamespace",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2173,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2340,
                        "name": "listenerDelta",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of event listeners that were added (positive number) or removed (negative number).",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2184,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2339,
                        "name": "listenerName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The name of the event listener.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2179,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2335,
                        "name": "nextSibling",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2170,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "NodeReference"
                        }
                    },
                    {
                        "id": 2338,
                        "name": "oldValue",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2174,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2334,
                        "name": "previousSibling",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2169,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "NodeReference"
                        }
                    },
                    {
                        "id": 2333,
                        "name": "removedNodes",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2167,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "NodeReference"
                            }
                        }
                    },
                    {
                        "id": 2331,
                        "name": "target",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2165,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "NodeReference"
                        }
                    },
                    {
                        "id": 2330,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2164,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "attributes"
                                },
                                {
                                    "type": "literal",
                                    "value": "characterData"
                                },
                                {
                                    "type": "literal",
                                    "value": "childList"
                                },
                                {
                                    "type": "literal",
                                    "value": "event_listener"
                                }
                            ]
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2332,
                            2336,
                            2337,
                            2340,
                            2339,
                            2335,
                            2338,
                            2334,
                            2333,
                            2331,
                            2330
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2163,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines a mutation record that can be serialized and sent over a web worker pipe.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SerializableMutationRecord\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2912,
            "order": 9999,
            "name": "SetAppOutputAction",
            "reflection": {
                "id": 2912,
                "name": "SetAppOutputAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that notifies that the output of a app should be updated with the given data.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetAppOutputAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2914,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2075,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2915,
                        "name": "output",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The output that the app should show.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2080,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "any"
                        }
                    },
                    {
                        "id": 2913,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2070,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "set_app_output"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2916,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2082,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2914,
                            2915,
                            2913,
                            2916
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2069,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that notifies that the output of a app should be updated with the given data.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetAppOutputAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2672,
            "order": 9999,
            "name": "SetClipboardAction",
            "reflection": {
                "id": 2672,
                "name": "SetClipboardAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that sets some text on the user's clipboard.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetClipboardAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2674,
                        "name": "text",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The text that the clipboard should be set to.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1445,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2673,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1440,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "set_clipboard"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2674,
                            2673
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1439,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that sets some text on the user's clipboard.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetClipboardAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1942,
            "order": 9999,
            "name": "SetRoomOptionsResult",
            "reflection": {
                "id": 1942,
                "name": "SetRoomOptionsResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"set room options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomOptionsResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2297,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1943,
                            "name": "SetRoomOptionsSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1946,
                            "name": "SetRoomOptionsFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"set room options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomOptionsResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1943,
            "order": 9999,
            "name": "SetRoomOptionsSuccess",
            "reflection": {
                "id": 1943,
                "name": "SetRoomOptionsSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"set room options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomOptionsSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1945,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were set on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2312,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    },
                    {
                        "id": 1944,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2308,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1945,
                            1944
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2307,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"set room options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomOptionsSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3092,
            "order": 9999,
            "name": "SetRoomTrackOptions",
            "reflection": {
                "id": 3092,
                "name": "SetRoomTrackOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents the set of options that can be set on a room video/audio track.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomTrackOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3093,
                        "name": "muted",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to mute the track locally.\nThis will prevent the track from streaming from the server to this device.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 866,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 3094,
                        "name": "videoQuality",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The video quality that the track should stream at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                                "line": 871,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "name": "TrackVideoQuality"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3093,
                            3094
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/RecordsEvents.ts",
                        "line": 861,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents the set of options that can be set on a room video/audio track.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomTrackOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1969,
            "order": 9999,
            "name": "SetRoomTrackOptionsFailure",
            "reflection": {
                "id": 1969,
                "name": "SetRoomTrackOptionsFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a failed \"set room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomTrackOptionsFailure\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1974,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address of the track that the options were attempted to be set on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2512,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1971,
                        "name": "errorCode",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error code that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2497,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1972,
                        "name": "errorMessage",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The error message that describes why the request failed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2502,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1973,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were attempted to be set on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2507,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1970,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2492,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": false
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1974,
                            1971,
                            1972,
                            1973,
                            1970
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2491,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a failed \"set room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomTrackOptionsFailure\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1963,
            "order": 9999,
            "name": "SetRoomTrackOptionsResult",
            "reflection": {
                "id": 1963,
                "name": "SetRoomTrackOptionsResult",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "The possible results for a \"set room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomTrackOptionsResult\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2456,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "reference",
                            "id": 1964,
                            "name": "SetRoomTrackOptionsSuccess"
                        },
                        {
                            "type": "reference",
                            "id": 1969,
                            "name": "SetRoomTrackOptionsFailure"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "The possible results for a \"set room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomTrackOptionsResult\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1964,
            "order": 9999,
            "name": "SetRoomTrackOptionsSuccess",
            "reflection": {
                "id": 1964,
                "name": "SetRoomTrackOptionsSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a successful \"set room track options\" request.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SetRoomTrackOptionsSuccess\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1967,
                        "name": "address",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The address of the track that the options were set on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2477,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1968,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options that were set.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2482,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 3074,
                            "name": "RoomTrackOptions"
                        }
                    },
                    {
                        "id": 1966,
                        "name": "roomName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the room that the options were set on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2472,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1965,
                        "name": "success",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2467,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1967,
                            1968,
                            1966,
                            1965
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2466,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a successful \"set room track options\" request.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SetRoomTrackOptionsSuccess\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2871,
            "order": 9999,
            "name": "ShareAction",
            "reflection": {
                "id": 2871,
                "name": "ShareAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that shares the given information using the\ndevice's native social sharing capabilities.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShareAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2874,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2873,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2877,
                        "name": "text",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that should be shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1926,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2451,
                            "name": "ShareOptions.text"
                        }
                    },
                    {
                        "id": 2876,
                        "name": "title",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The title of the document being shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1921,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2450,
                            "name": "ShareOptions.title"
                        }
                    },
                    {
                        "id": 2872,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1942,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "share"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2875,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 2878,
                        "name": "url",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The URL of the document being shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1931,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2452,
                            "name": "ShareOptions.url"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2874,
                            2873,
                            2877,
                            2876,
                            2872,
                            2875,
                            2878
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1941,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2449,
                        "name": "ShareOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that shares the given information using the\ndevice's native social sharing capabilities.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShareAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2449,
            "order": 9999,
            "name": "ShareOptions",
            "reflection": {
                "id": 2449,
                "name": "ShareOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines the options that a share action can have.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShareOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2451,
                        "name": "text",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that should be shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1926,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2450,
                        "name": "title",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The title of the document being shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1921,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2452,
                        "name": "url",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The URL of the document being shared.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1931,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2451,
                            2450,
                            2452
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1917,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2871,
                        "name": "ShareAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines the options that a share action can have.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShareOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2675,
            "order": 9999,
            "name": "ShowChatBarAction",
            "reflection": {
                "id": 2675,
                "name": "ShowChatBarAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that shows the chat bar.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowChatBarAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2681,
                        "name": "backgroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the background.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1480,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2682,
                        "name": "foregroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the foreground (text).",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1485,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2679,
                        "name": "placeholder",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that the bar should have as the placeholder.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1470,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2680,
                        "name": "placeholderColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the placeholder.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1475,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2678,
                        "name": "prefill",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that the bar should be filled with by default.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1465,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2676,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1455,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_chat_bar"
                        }
                    },
                    {
                        "id": 2677,
                        "name": "visible",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the chat bar should be visible.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1460,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2681,
                            2682,
                            2679,
                            2680,
                            2678,
                            2676,
                            2677
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1454,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that shows the chat bar.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowChatBarAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2443,
            "order": 9999,
            "name": "ShowChatOptions",
            "reflection": {
                "id": 2443,
                "name": "ShowChatOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines the possible options for showing the chat bar.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowChatOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2447,
                        "name": "backgroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the background.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1513,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2448,
                        "name": "foregroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the foreground (text).",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1518,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2445,
                        "name": "placeholder",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that the bar should have as the placeholder.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1503,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2446,
                        "name": "placeholderColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The color to use for the placeholder.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1508,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2444,
                        "name": "prefill",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that the bar should be filled with by default.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1498,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2447,
                            2448,
                            2445,
                            2446,
                            2444
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1494,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines the possible options for showing the chat bar.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowChatOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2525,
            "order": 9999,
            "name": "ShowConfirmAction",
            "reflection": {
                "id": 2525,
                "name": "ShowConfirmAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that is used to show a confirmation dialog.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowConfirmAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2527,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The options for the confirmation dialog.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1161,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2520,
                            "name": "ShowConfirmOptions"
                        }
                    },
                    {
                        "id": 2529,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2528,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2526,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1156,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_confirm"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2530,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2527,
                            2529,
                            2528,
                            2526,
                            2530
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1155,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that is used to show a confirmation dialog.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowConfirmAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2520,
            "order": 9999,
            "name": "ShowConfirmOptions",
            "reflection": {
                "id": 2520,
                "name": "ShowConfirmOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents the options that can be used for a confirmation dialog.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowConfirmOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2524,
                        "name": "cancelText",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that should be shown on the \"Cancel\" button.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1189,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2523,
                        "name": "confirmText",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The text that should be shown on the \"Confirm\" button.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1184,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2522,
                        "name": "content",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The content of the dialog.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1179,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2521,
                        "name": "title",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The title that should be shown for the dialog.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1174,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2524,
                            2523,
                            2522,
                            2521
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1170,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents the options that can be used for a confirmation dialog.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowConfirmOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2509,
            "order": 9999,
            "name": "ShowInputOptions",
            "reflection": {
                "id": 2509,
                "name": "ShowInputOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface for options that a show input event can use.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowInputOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2516,
                        "name": "autoSelect",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the text in the input box should be automatically selected.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1350,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2514,
                        "name": "backgroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The background color to use.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1340,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2515,
                        "name": "foregroundColor",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The foreground color to use.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1345,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2517,
                        "name": "items",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The list of items that should be displayed.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1355,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "ShowInputItem"
                            }
                        }
                    },
                    {
                        "id": 2513,
                        "name": "placeholder",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The placeholder for the value.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1335,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2511,
                        "name": "subtype",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The subtype of input box to show.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1325,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2519,
                            "name": "ShowInputSuptype"
                        }
                    },
                    {
                        "id": 2512,
                        "name": "title",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The title that should be used for the input.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1330,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2510,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The type of input box to show.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1320,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reference",
                            "id": 2518,
                            "name": "ShowInputType"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2516,
                            2514,
                            2515,
                            2517,
                            2513,
                            2511,
                            2512,
                            2510
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1316,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface for options that a show input event can use.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowInputOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2519,
            "order": 9999,
            "name": "ShowInputSuptype",
            "reflection": {
                "id": 2519,
                "name": "ShowInputSubtype",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "Defines the possible input types.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowInputSuptype\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1375,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "basic"
                        },
                        {
                            "type": "literal",
                            "value": "swatch"
                        },
                        {
                            "type": "literal",
                            "value": "advanced"
                        },
                        {
                            "type": "literal",
                            "value": "select"
                        },
                        {
                            "type": "literal",
                            "value": "multiSelect"
                        },
                        {
                            "type": "literal",
                            "value": "radio"
                        },
                        {
                            "type": "literal",
                            "value": "checkbox"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "Defines the possible input types.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowInputSuptype\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2518,
            "order": 9999,
            "name": "ShowInputType",
            "reflection": {
                "id": 2518,
                "name": "ShowInputType",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "comment": {
                    "shortText": "Defines the possible input types.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowInputType\n"
                        }
                    ]
                },
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1368,
                        "character": 12
                    }
                ],
                "type": {
                    "type": "union",
                    "types": [
                        {
                            "type": "literal",
                            "value": "text"
                        },
                        {
                            "type": "literal",
                            "value": "color"
                        },
                        {
                            "type": "literal",
                            "value": "secret"
                        },
                        {
                            "type": "literal",
                            "value": "date"
                        },
                        {
                            "type": "literal",
                            "value": "list"
                        }
                    ]
                }
            },
            "comment": {
                "shortText": "Defines the possible input types.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowInputType\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2863,
            "order": 9999,
            "name": "ShowJoinCodeAction",
            "reflection": {
                "id": 2863,
                "name": "ShowJoinCodeAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that shows a QR code that is a link to a instance & dimension.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowJoinCodeAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2866,
                        "name": "dimension",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The dimension that should be joined.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1887,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2865,
                        "name": "inst",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The instance that should be joined.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1882,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2864,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1877,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_join_code"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2866,
                            2865,
                            2864
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1876,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that shows a QR code that is a link to a instance & dimension.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowJoinCodeAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2689,
            "order": 9999,
            "name": "ShowUploadAuxFileAction",
            "reflection": {
                "id": 2689,
                "name": "ShowUploadAuxFileAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that shows the \"upload AUX file\" dialog.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowUploadAuxFileAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2690,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1543,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_upload_aux_file"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2690
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1542,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that shows the \"upload AUX file\" dialog.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowUploadAuxFileAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2691,
            "order": 9999,
            "name": "ShowUploadFilesAction",
            "reflection": {
                "id": 2691,
                "name": "ShowUploadFilesAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that shows the \"uplaod file\" dialog.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "ShowUploadFilesAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2694,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2693,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2692,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1553,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "show_upload_files"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2695,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2694,
                            2693,
                            2692,
                            2695
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1552,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that shows the \"uplaod file\" dialog.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "ShowUploadFilesAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2478,
            "order": 9999,
            "name": "SnapGrid",
            "reflection": {
                "id": 2478,
                "name": "SnapGrid",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a snap grid.\nThat is, a 2D plane that is segmented into discrete sections.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SnapGrid\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2493,
                        "name": "bounds",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The bounds that the snap grid has.\nIf not specified, then default bounds are used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2421,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2494,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2495,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2421,
                                                "character": 15
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2496,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2421,
                                                "character": 26
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2495,
                                            2496
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2490,
                        "name": "portalBotId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the bot that defines the portal that this grid should use.\nIf not specifed, then the config bot is used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2402,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2491,
                        "name": "portalTag",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The tag that contains the portal dimension.\nIf a portalBotId is specified, then this defaults to formAddress.\nIf a portalBotId is not specified, then this defaults to gridPortal.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2409,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2479,
                        "name": "position",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The 3D position of the grid.\nIf not specified, then 0,0,0 is used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2390,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2480,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2481,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2390,
                                                "character": 17
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2482,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2390,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2483,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2390,
                                                "character": 39
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2481,
                                            2482,
                                            2483
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2492,
                        "name": "priority",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The priority that the snap grid has.\nHigher numbers mean higher priority.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2415,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2484,
                        "name": "rotation",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The 3D rotation of the grid.\nIf not specified, then the identity rotation is used.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2396,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2485,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2489,
                                        "name": "w",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                            "isOptional": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2396,
                                                "character": 50
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2486,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2396,
                                                "character": 17
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2487,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2396,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2488,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 2396,
                                                "character": 39
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2489,
                                            2486,
                                            2487,
                                            2488
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2497,
                        "name": "showGrid",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to visualize the grid when dragging bots around.\nDefaults to false.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2427,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2498,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The type of grid that this snap grid should be.\nDefaults to the type of grid that the portal bot uses.",
                            "text": "- \"grid\" indicates that the snap target should be a flat grid.\n- \"sphere\" indicates that the snap target should be a sphere.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2436,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "grid"
                                },
                                {
                                    "type": "literal",
                                    "value": "sphere"
                                }
                            ]
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2493,
                            2490,
                            2491,
                            2479,
                            2492,
                            2484,
                            2497,
                            2498
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2385,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a snap grid.\nThat is, a 2D plane that is segmented into discrete sections.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SnapGrid\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1884,
            "order": 9999,
            "name": "SnapGridTarget",
            "reflection": {
                "id": 1884,
                "name": "SnapGridTarget",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that contains options for a snap grid for [`os.addDropGrid(...targets)`](ref:os.addDropGrid).",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SnapGridTarget\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1898,
                        "name": "bounds",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The bounds of the grid.\nDefaults to 10 x 10.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2173,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 1899,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 1900,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2173,
                                                "character": 15
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1901,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2173,
                                                "character": 26
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            1900,
                                            1901
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 1896,
                        "name": "portalBot",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The bot that defines the portal that the grid should exist in.\nIf null, then this defaults to the configBot.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2162,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "reference",
                                    "id": 3122,
                                    "name": "Bot"
                                }
                            ]
                        }
                    },
                    {
                        "id": 1897,
                        "name": "portalTag",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The tag that the portal uses to determine which dimension to show. Defaults to formAddress.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2167,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1885,
                        "name": "position",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The 3D position that the grid should appear at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2151,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 1886,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 1887,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2151,
                                                "character": 17
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1888,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2151,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1889,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2151,
                                                "character": 39
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            1887,
                                            1888,
                                            1889
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 1902,
                        "name": "priority",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The priority that this grid should be evaluated in over other grids.\nHigher priorities will be evaluated before lower priorities.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2179,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 1890,
                        "name": "rotation",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The 3D rotation that the grid should appear at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2156,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 1891,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 1895,
                                        "name": "w",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                            "isOptional": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2156,
                                                "character": 50
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1892,
                                        "name": "x",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2156,
                                                "character": 17
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1893,
                                        "name": "y",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2156,
                                                "character": 28
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 1894,
                                        "name": "z",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                            {
                                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                                "line": 2156,
                                                "character": 39
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            1895,
                                            1892,
                                            1893,
                                            1894
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 1903,
                        "name": "showGrid",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to visualize the grid while a bot is being dragged.\nDefaults to false.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2185,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 1904,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The type of grid that this snap grid should be.\nDefaults to the type of grid that the portal bot uses.",
                            "text": "- \"grid\" indicates that the snap target should be a flat grid.\n- \"sphere\" indicates that the snap target should be a sphere.\n",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2194,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "grid"
                                },
                                {
                                    "type": "literal",
                                    "value": "sphere"
                                }
                            ]
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1898,
                            1896,
                            1897,
                            1885,
                            1902,
                            1890,
                            1903,
                            1904
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2147,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that contains options for a snap grid for {@link os.addDropGrid}.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SnapGridTarget\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2954,
            "order": 9999,
            "name": "SpeakTextAction",
            "reflection": {
                "id": 2954,
                "name": "SpeakTextAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "An event that is used to speak some text using the builtin text to speech engine.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "SpeakTextAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2960,
                        "name": "pitch",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The pitch that the text should be spoken at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2587,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "SpeakTextOptions.pitch"
                        }
                    },
                    {
                        "id": 2958,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2961,
                        "name": "rate",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The rate that the text should be spoken at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2592,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "SpeakTextOptions.rate"
                        }
                    },
                    {
                        "id": 2957,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2956,
                        "name": "text",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The text that should be spoken.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2612,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2955,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2607,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "speak_text"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2959,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    },
                    {
                        "id": 2962,
                        "name": "voice",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The name of the voice that the text should be spoken with.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2597,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "SpeakTextOptions.voice"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2960,
                            2958,
                            2961,
                            2957,
                            2956,
                            2955,
                            2959,
                            2962
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2606,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "name": "SpeakTextOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "An event that is used to speak some text using the builtin text to speech engine.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "SpeakTextAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2732,
            "order": 9999,
            "name": "StartFormAnimationAction",
            "reflection": {
                "id": 2732,
                "name": "StartFormAnimationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that starts a given animation on a bot/bots.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "StartFormAnimationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2750,
                        "name": "animationAddress",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The address that the animations should be loaded from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3155,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2720,
                            "name": "StartFormAnimationOptions.animationAddress"
                        }
                    },
                    {
                        "id": 2734,
                        "name": "botIds",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The list of bot IDs that the animation should be run for.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3172,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        }
                    },
                    {
                        "id": 2746,
                        "name": "clampWhenFinished",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the final animation values should be preserved when the animation finishes.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3133,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2716,
                            "name": "StartFormAnimationOptions.clampWhenFinished"
                        }
                    },
                    {
                        "id": 2747,
                        "name": "crossFadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to cross fade from the previous animation.\nIf null, then this animation takes over immediately. Additionally, if no previous animation was playing then this animation takes over immediately.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3139,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2717,
                            "name": "StartFormAnimationOptions.crossFadeDuration"
                        }
                    },
                    {
                        "id": 2748,
                        "name": "crossFadeWarp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to warp animation values during a cross fade.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3144,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2718,
                            "name": "StartFormAnimationOptions.crossFadeWarp"
                        }
                    },
                    {
                        "id": 2749,
                        "name": "fadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to fade in.\nIf null, then the animation will not fade in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3150,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2719,
                            "name": "StartFormAnimationOptions.fadeDuration"
                        }
                    },
                    {
                        "id": 2740,
                        "name": "initialTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The time within the animation clip that the animation should start at in miliseconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3104,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2710,
                            "name": "StartFormAnimationOptions.initialTime"
                        }
                    },
                    {
                        "id": 2742,
                        "name": "loop",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The options for looping the animation.\nIf omitted, then the animation will play once and finish.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3118,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2743,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2745,
                                        "name": "count",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "The number of times that the animation should repeat for.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 3127,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2744,
                                        "name": "mode",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "The looping mode that should be used.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 3122,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "literal",
                                                    "value": "repeat"
                                                },
                                                {
                                                    "type": "literal",
                                                    "value": "pingPong"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2745,
                                            2744
                                        ]
                                    }
                                ]
                            }
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2712,
                            "name": "StartFormAnimationOptions.loop"
                        }
                    },
                    {
                        "id": 2735,
                        "name": "nameOrIndex",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name or index of the animation that should be started.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3177,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        }
                    },
                    {
                        "id": 2737,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2739,
                        "name": "startTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The Unix time in miliseconds that the animation should start at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3099,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2709,
                            "name": "StartFormAnimationOptions.startTime"
                        }
                    },
                    {
                        "id": 2736,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2741,
                        "name": "timeScale",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The rate at which the animation plays.\n1 means the animation plays normally.\n2 means the animation plays 2x as quickly.\n0 means that the animation is paused.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3112,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2711,
                            "name": "StartFormAnimationOptions.timeScale"
                        }
                    },
                    {
                        "id": 2733,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3167,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "start_form_animation"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2738,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2750,
                            2734,
                            2746,
                            2747,
                            2748,
                            2749,
                            2740,
                            2742,
                            2735,
                            2737,
                            2739,
                            2736,
                            2741,
                            2733,
                            2738
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3164,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2708,
                        "name": "StartFormAnimationOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that starts a given animation on a bot/bots.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "StartFormAnimationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2708,
            "order": 9999,
            "name": "StartFormAnimationOptions",
            "reflection": {
                "id": 2708,
                "name": "StartFormAnimationOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that contains a bunch of options for starting an animation.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "StartFormAnimationOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2720,
                        "name": "animationAddress",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The address that the animations should be loaded from.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3155,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2716,
                        "name": "clampWhenFinished",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the final animation values should be preserved when the animation finishes.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3133,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2717,
                        "name": "crossFadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to cross fade from the previous animation.\nIf null, then this animation takes over immediately. Additionally, if no previous animation was playing then this animation takes over immediately.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3139,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2718,
                        "name": "crossFadeWarp",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether to warp animation values during a cross fade.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3144,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    },
                    {
                        "id": 2719,
                        "name": "fadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to fade in.\nIf null, then the animation will not fade in.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3150,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2710,
                        "name": "initialTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The time within the animation clip that the animation should start at in miliseconds.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3104,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2712,
                        "name": "loop",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The options for looping the animation.\nIf omitted, then the animation will play once and finish.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3118,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "reflection",
                            "declaration": {
                                "id": 2713,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                    {
                                        "id": 2715,
                                        "name": "count",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "The number of times that the animation should repeat for.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 3127,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                        }
                                    },
                                    {
                                        "id": 2714,
                                        "name": "mode",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                            "shortText": "The looping mode that should be used.",
                                            "tags": []
                                        },
                                        "sources": [
                                            {
                                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                                "line": 3122,
                                                "character": 8
                                            }
                                        ],
                                        "type": {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "literal",
                                                    "value": "repeat"
                                                },
                                                {
                                                    "type": "literal",
                                                    "value": "pingPong"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "groups": [
                                    {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                            2715,
                                            2714
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": 2709,
                        "name": "startTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The Unix time in miliseconds that the animation should start at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3099,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2711,
                        "name": "timeScale",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The rate at which the animation plays.\n1 means the animation plays normally.\n2 means the animation plays 2x as quickly.\n0 means that the animation is paused.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3112,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2720,
                            2716,
                            2717,
                            2718,
                            2719,
                            2710,
                            2712,
                            2709,
                            2711
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3095,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2732,
                        "name": "StartFormAnimationAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that contains a bunch of options for starting an animation.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "StartFormAnimationOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2721,
            "order": 9999,
            "name": "StopFormAnimationAction",
            "reflection": {
                "id": 2721,
                "name": "StopFormAnimationAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that stops an animation on a bot/bots.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "StopFormAnimationAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2723,
                        "name": "botIds",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The list of Bot IDs that the animation should be stopped on.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3213,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        }
                    },
                    {
                        "id": 2728,
                        "name": "fadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to fade out.\nIf null, then the animation will stop immediately.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3196,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2731,
                            "name": "StopFormAnimationOptions.fadeDuration"
                        }
                    },
                    {
                        "id": 2725,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2727,
                        "name": "stopTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The Unix time in miliseconds that the animation should be stopped at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3190,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "id": 2730,
                            "name": "StopFormAnimationOptions.stopTime"
                        }
                    },
                    {
                        "id": 2724,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2722,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3208,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "stop_form_animation"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2726,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2723,
                            2728,
                            2725,
                            2727,
                            2724,
                            2722,
                            2726
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3205,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    },
                    {
                        "type": "reference",
                        "id": 2729,
                        "name": "StopFormAnimationOptions"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that stops an animation on a bot/bots.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "StopFormAnimationAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2729,
            "order": 9999,
            "name": "StopFormAnimationOptions",
            "reflection": {
                "id": 2729,
                "name": "StopFormAnimationOptions",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that contains a bunch of options for stopping an animation.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "StopFormAnimationOptions\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2731,
                        "name": "fadeDuration",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The number of miliseconds that the animation should take to fade out.\nIf null, then the animation will stop immediately.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3196,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    },
                    {
                        "id": 2730,
                        "name": "stopTime",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The Unix time in miliseconds that the animation should be stopped at.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3190,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2731,
                            2730
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3186,
                        "character": 17
                    }
                ],
                "extendedBy": [
                    {
                        "type": "reference",
                        "id": 2721,
                        "name": "StopFormAnimationAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that contains a bunch of options for stopping an animation.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "StopFormAnimationOptions\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2894,
            "order": 9999,
            "name": "UnregisterCustomAppAction",
            "reflection": {
                "id": 2894,
                "name": "UnregisterCustomAppAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that unregisters a custom app.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "UnregisterCustomAppAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2896,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2018,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2898,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2897,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2895,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2013,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "unregister_custom_app"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2899,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2896,
                            2898,
                            2897,
                            2895,
                            2899
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2012,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that unregisters a custom app.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "UnregisterCustomAppAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2907,
            "order": 9999,
            "name": "UnregisterHtmlAppAction",
            "reflection": {
                "id": 2907,
                "name": "UnregisterHtmlAppAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that requests that a HTML app be deleted.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "UnregisterHtmlAppAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2909,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2054,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2910,
                        "name": "instanceId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app instance.\nUsed to distinguish between multiple instances of the same app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2060,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2908,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2049,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "unregister_html_app"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2911,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2909,
                            2910,
                            2908,
                            2911
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2048,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that requests that a HTML app be deleted.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "UnregisterHtmlAppAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2309,
            "order": 9999,
            "name": "UpdateHtmlAppAction",
            "reflection": {
                "id": 2309,
                "name": "UpdateHtmlAppAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that notifies that a custom app has recieved a HTML update.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "UpdateHtmlAppAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2313,
                        "name": "[UNMAPPABLE]",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2104,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": true
                        }
                    },
                    {
                        "id": 2311,
                        "name": "appId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the app.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2097,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 2310,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2092,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "update_html_app"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "Action.type"
                        }
                    },
                    {
                        "id": 2314,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "Action.uncopiable"
                        }
                    },
                    {
                        "id": 2312,
                        "name": "updates",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The array of mutation rectords that represent the changes to the HTML.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 2102,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "id": 2329,
                                "name": "SerializableMutationRecord"
                            }
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2313,
                            2311,
                            2310,
                            2314,
                            2312
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 2091,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "Action"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that notifies that a custom app has recieved a HTML update.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "UpdateHtmlAppAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 1905,
            "order": 9999,
            "name": "UploadedFile",
            "reflection": {
                "id": 1905,
                "name": "UploadedFile",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a file that was uploaded.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "UploadedFile\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 1908,
                        "name": "data",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The data that the file contains.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2787,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "reference",
                                    "qualifiedName": "ArrayBuffer",
                                    "package": "typescript",
                                    "name": "ArrayBuffer"
                                }
                            ]
                        }
                    },
                    {
                        "id": 1906,
                        "name": "name",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The name of the file that was uploaded.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2777,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    {
                        "id": 1907,
                        "name": "size",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The size of the file in bytes.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                                "line": 2782,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "number"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            1908,
                            1906,
                            1907
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-runtime/runtime/AuxLibrary.ts",
                        "line": 2773,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a file that was uploaded.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "UploadedFile\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 2845,
            "order": 9999,
            "name": "VRSupportedAction",
            "reflection": {
                "id": 2845,
                "name": "VRSupportedAction",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an event that checks for VR support on the device.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "VRSupportedAction\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 2848,
                        "name": "playerId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "The ID of the player that created this task.\nSet by remote action handlers when a task is recieved from a remote player.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 186,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "string"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.playerId"
                        }
                    },
                    {
                        "id": 2847,
                        "name": "taskId",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "The ID of the async task.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 180,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "string"
                                },
                                {
                                    "type": "intrinsic",
                                    "name": "number"
                                }
                            ]
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.taskId"
                        }
                    },
                    {
                        "id": 2846,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 1822,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "literal",
                            "value": "vr_supported"
                        },
                        "overwrites": {
                            "type": "reference",
                            "name": "AsyncAction.type"
                        }
                    },
                    {
                        "id": 2849,
                        "name": "uncopiable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                            "isOptional": true
                        },
                        "comment": {
                            "shortText": "Whether the action can be structure cloned.\nIf true, then the action should not be passed across message ports.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/common/Action.ts",
                                "line": 18,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        },
                        "inheritedFrom": {
                            "type": "reference",
                            "name": "AsyncAction.uncopiable"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            2848,
                            2847,
                            2846,
                            2849
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 1821,
                        "character": 17
                    }
                ],
                "extendedTypes": [
                    {
                        "type": "reference",
                        "name": "AsyncAction"
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an event that checks for VR support on the device.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "VRSupportedAction\n"
                    }
                ]
            },
            "group": null
        },
        {
            "id": 3043,
            "order": 9999,
            "name": "WakeLockConfiguration",
            "reflection": {
                "id": 3043,
                "name": "WakeLockConfiguration",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "comment": {
                    "shortText": "Defines an interface that represents a wake lock configuration.",
                    "tags": [
                        {
                            "tag": "dochash",
                            "paramName": "",
                            "text": "types/os"
                        },
                        {
                            "tag": "docname",
                            "paramName": "",
                            "text": "WakeLockConfiguration\n"
                        }
                    ]
                },
                "children": [
                    {
                        "id": 3044,
                        "name": "enabled",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                            "shortText": "Whether the wake lock is enabled.",
                            "tags": []
                        },
                        "sources": [
                            {
                                "fileName": "src/aux-common/bots/BotEvents.ts",
                                "line": 3302,
                                "character": 4
                            }
                        ],
                        "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                        }
                    }
                ],
                "groups": [
                    {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                            3044
                        ]
                    }
                ],
                "sources": [
                    {
                        "fileName": "src/aux-common/bots/BotEvents.ts",
                        "line": 3298,
                        "character": 17
                    }
                ]
            },
            "comment": {
                "shortText": "Defines an interface that represents a wake lock configuration.",
                "text": "",
                "tags": [
                    {
                        "tagName": "dochash",
                        "paramName": "",
                        "text": "types/os"
                    },
                    {
                        "tagName": "docname",
                        "paramName": "",
                        "text": "WakeLockConfiguration\n"
                    }
                ]
            },
            "group": null
        }
    ],
    "references": {
        "CasualOSError": "types/error",
        "id-3299": "CasualOSError",
        "Quaternion": "types/math/rotations",
        "id-3704": "Quaternion",
        "Rotation": "types/math/rotations",
        "id-3736": "Rotation",
        "Vector2": "types/math/vectors",
        "id-3570": "Vector2",
        "Vector3": "types/math/vectors",
        "id-3627": "Vector3",
        "AIChatMessage": "types/ai",
        "id-3318": "AIChatMessage",
        "AIChatOptions": "types/ai",
        "id-3095": "AIChatOptions",
        "AIGenerateImageSuccess": "types/ai",
        "id-2250": "AIGenerateImageSuccess",
        "AIGenerateImageOptions": "types/ai",
        "id-3109": "AIGenerateImageOptions",
        "AIGenerateSkyboxOptions": "types/ai",
        "id-3105": "AIGenerateSkyboxOptions",
        "AIGenerateSkyboxRequest": "types/ai",
        "id-2243": "AIGenerateSkyboxRequest",
        "AIGenerateSkyboxResult": "types/ai",
        "id-2247": "AIGenerateSkyboxResult",
        "AIGeneratedImage": "types/ai",
        "id-2253": "AIGeneratedImage",
        "ARSupportedAction": "types/os",
        "id-2840": "ARSupportedAction",
        "AddCountFailure": "types/records/events",
        "id-3503": "AddCountFailure",
        "AddCountSuccess": "types/records/events",
        "id-3498": "AddCountSuccess",
        "AddDropSnapAction": "types/os",
        "id-2469": "AddDropSnapAction",
        "AddDropSnapPointsAction": "types/os",
        "id-2473": "AddDropSnapPointsAction",
        "AnalyticsRecordEventAction": "types/os",
        "id-3045": "AnalyticsRecordEventAction",
        "AnimateTagOptions": "types/animation",
        "id-1848": "AnimateTagOptions",
        "AttachDebuggerOptions": "types/debuggers/common",
        "id-2223": "AttachDebuggerOptions",
        "AuthData": "types/os",
        "id-2984": "AuthData",
        "CasualOSDevice": "types/os",
        "id-3286": "CasualOSDevice",
        "CasualOSVersion": "types/os",
        "id-3278": "CasualOSVersion",
        "AxisAndAngle": "types/math/rotations",
        "id-3782": "AxisAndAngle",
        "BeginRecordingAction": "types/os",
        "id-2927": "BeginRecordingAction",
        "BotTagMasks": "types/core",
        "id-3255": "BotTagMasks",
        "BotTags": "types/core",
        "id-3170": "BotTags",
        "BotState": "types/core",
        "id-3268": "BotState",
        "BufferFormAddressGLTFAction": "types/os",
        "id-3052": "BufferFormAddressGLTFAction",
        "BufferSoundAction": "types/os",
        "id-2651": "BufferSoundAction",
        "CalculateRayFromCameraAction": "types/os",
        "id-3025": "CalculateRayFromCameraAction",
        "CancelSoundAction": "types/os",
        "id-2657": "CancelSoundAction",
        "CompiledBotListeners": "types/core",
        "id-3249": "CompiledBotListeners",
        "ConfigureWakeLockAction": "types/os",
        "id-3032": "ConfigureWakeLockAction",
        "ConvertGeolocationToWhat3WordsAction": "types/os",
        "id-2415": "ConvertGeolocationToWhat3WordsAction",
        "ConvertGeolocationToWhat3WordsOptions": "types/os",
        "id-2404": "ConvertGeolocationToWhat3WordsOptions",
        "CreatePublicRecordKeyFailure": "types/records/key",
        "id-3440": "CreatePublicRecordKeyFailure",
        "CreatePublicRecordKeySuccess": "types/records/key",
        "id-3436": "CreatePublicRecordKeySuccess",
        "CustomAppContainerAvailableAction": "types/os",
        "id-2884": "CustomAppContainerAvailableAction",
        "DebuggerCallFrame": "types/debuggers/common",
        "id-2176": "DebuggerCallFrame",
        "DebuggerFunctionLocation": "types/debuggers/common",
        "id-2211": "DebuggerFunctionLocation",
        "DebuggerPause": "types/debuggers/common",
        "id-2205": "DebuggerPause",
        "DebuggerTagMaskUpdate": "types/debuggers/common",
        "id-2184": "DebuggerTagMaskUpdate",
        "DebuggerTagUpdate": "types/debuggers/common",
        "id-2190": "DebuggerTagUpdate",
        "DebuggerVariable": "types/debuggers/common",
        "id-2217": "DebuggerVariable",
        "DefineGlobalBotAction": "types/os",
        "id-2408": "DefineGlobalBotAction",
        "DownloadAction": "types/os",
        "id-2663": "DownloadAction",
        "Easing": "types/animation",
        "id-2386": "Easing",
        "EnableARAction": "types/os",
        "id-2836": "EnableARAction",
        "EnableCollaborationAction": "types/os",
        "id-2795": "EnableCollaborationAction",
        "EnableCustomDraggingAction": "types/os",
        "id-2499": "EnableCustomDraggingAction",
        "EnablePOVAction": "types/os",
        "id-2854": "EnablePOVAction",
        "EnableVRAction": "types/os",
        "id-2850": "EnableVRAction",
        "EnableXROptions": "types/os",
        "id-2706": "EnableXROptions",
        "EndRecordingAction": "types/os",
        "id-2935": "EndRecordingAction",
        "EraseDataFailure": "types/records/data",
        "id-3474": "EraseDataFailure",
        "EraseDataSuccess": "types/records/data",
        "id-3470": "EraseDataSuccess",
        "EraseFileFailure": "types/records/files",
        "id-3493": "EraseFileFailure",
        "EraseFileSuccess": "types/records/files",
        "id-3489": "EraseFileSuccess",
        "EulerAnglesRotation": "types/math/rotations",
        "id-3785": "EulerAnglesRotation",
        "ExitFullscreenAction": "types/os",
        "id-2869": "ExitFullscreenAction",
        "FocusOnOptions": "types/os",
        "id-2453": "FocusOnOptions",
        "FocusOnRotation": "types/os",
        "id-2465": "FocusOnRotation",
        "FormAnimationData": "types/os",
        "id-2751": "FormAnimationData",
        "FromToRotation": "types/math/rotations",
        "id-3779": "FromToRotation",
        "GenericError": "types/error",
        "id-3296": "GenericError",
        "GetAverageFrameRateAction": "types/os",
        "id-3005": "GetAverageFrameRateAction",
        "GetCountFailure": "types/records/events",
        "id-3514": "GetCountFailure",
        "GetCountSuccess": "types/records/events",
        "id-3508": "GetCountSuccess",
        "GetDataFailure": "types/records/data",
        "id-3465": "GetDataFailure",
        "GetDataSuccess": "types/records/data",
        "id-3456": "GetDataSuccess",
        "GetGeolocationAction": "types/os",
        "id-2968": "GetGeolocationAction",
        "GetRoomOptionsFailure": "types/os",
        "id-1938": "GetRoomOptionsFailure",
        "GetRoomOptionsSuccess": "types/os",
        "id-1934": "GetRoomOptionsSuccess",
        "GetRoomRemoteOptionsFailure": "types/os",
        "id-1981": "GetRoomRemoteOptionsFailure",
        "GetRoomRemoteOptionsSuccess": "types/os",
        "id-1976": "GetRoomRemoteOptionsSuccess",
        "GetRoomTrackOptionsFailure": "types/os",
        "id-1957": "GetRoomTrackOptionsFailure",
        "GetRoomTrackOptionsSuccess": "types/os",
        "id-1952": "GetRoomTrackOptionsSuccess",
        "GetVoicesAction": "types/os",
        "id-2963": "GetVoicesAction",
        "GetWakeLockConfigurationAction": "types/os",
        "id-3038": "GetWakeLockConfigurationAction",
        "GoToTagAction": "types/os",
        "id-2973": "GoToTagAction",
        "GrantMarkerPermissionFailure": "types/records/policies",
        "id-3542": "GrantMarkerPermissionFailure",
        "GrantMarkerPermissionSuccess": "types/records/policies",
        "id-3540": "GrantMarkerPermissionSuccess",
        "GrantRoleFailure": "types/records/roles",
        "id-3528": "GrantRoleFailure",
        "GrantRoleSuccess": "types/records/roles",
        "id-3526": "GrantRoleSuccess",
        "HtmlAppEventAction": "types/os",
        "id-2315": "HtmlAppEventAction",
        "HtmlAppMethodCallAction": "types/os",
        "id-2320": "HtmlAppMethodCallAction",
        "ImageClassifierOptions": "types/os",
        "id-2504": "ImageClassifierOptions",
        "InstUpdate": "types/os",
        "id-3292": "InstUpdate",
        "JoinRoomFailure": "types/os",
        "id-1919": "JoinRoomFailure",
        "JoinRoomSuccess": "types/os",
        "id-1916": "JoinRoomSuccess",
        "LeaveRoomFailure": "types/os",
        "id-1928": "LeaveRoomFailure",
        "LeaveRoomSuccess": "types/os",
        "id-1925": "LeaveRoomSuccess",
        "ListDataFailure": "types/records/data",
        "id-3484": "ListDataFailure",
        "ListDataSuccess": "types/records/data",
        "id-3479": "ListDataSuccess",
        "ListFormAnimationsAction": "types/os",
        "id-2755": "ListFormAnimationsAction",
        "ListStudiosFailure": "types/records/studios",
        "id-3557": "ListStudiosFailure",
        "ListStudiosSuccess": "types/records/studios",
        "id-3554": "ListStudiosSuccess",
        "ListedStudio": "types/records/studios",
        "id-3561": "ListedStudio",
        "LoadBotsAction": "types/os",
        "id-2800": "LoadBotsAction",
        "LoadSpaceAction": "types/os",
        "id-2696": "LoadSpaceAction",
        "LocalFormAnimationAction": "types/os",
        "id-2807": "LocalFormAnimationAction",
        "LocalPositionTweenAction": "types/os",
        "id-2821": "LocalPositionTweenAction",
        "LocalTweenAction": "types/os",
        "id-2811": "LocalTweenAction",
        "LookRotation": "types/math/rotations",
        "id-3802": "LookRotation",
        "MediaPermissionAction": "types/os",
        "id-2998": "MediaPermissionAction",
        "MediaPermissionOptions": "types/os",
        "id-2703": "MediaPermissionOptions",
        "MeetCommandAction": "types/os",
        "id-2940": "MeetCommandAction",
        "MeetFunctionAction": "types/os",
        "id-2947": "MeetFunctionAction",
        "Debugger": "types/debuggers/debugger",
        "id-1988": "Debugger",
        "NormalDebuggerOptions": "types/debuggers/common",
        "id-2195": "NormalDebuggerOptions",
        "OpenCircleWipeAction": "types/os",
        "id-2917": "OpenCircleWipeAction",
        "OpenCircleWipeOptions": "types/os",
        "id-2924": "OpenCircleWipeOptions",
        "PhotoCameraOptions": "types/camera",
        "id-2779": "PhotoCameraOptions",
        "OpenURLAction": "types/os",
        "id-2640": "OpenURLAction",
        "ParsedBotLink": "types/core",
        "id-3274": "ParsedBotLink",
        "PartialBotState": "types/core",
        "id-3271": "PartialBotState",
        "PausableDebugger": "types/debuggers/pausable-debugger",
        "id-2044": "PausableDebugger",
        "PausableDebuggerOptions": "types/debuggers/common",
        "id-2200": "PausableDebuggerOptions",
        "PauseTrigger": "types/debuggers/common",
        "id-2163": "PauseTrigger",
        "PauseTriggerOptions": "types/debuggers/common",
        "id-2171": "PauseTriggerOptions",
        "Photo": "types/camera",
        "id-2791": "Photo",
        "PlaySoundAction": "types/os",
        "id-2644": "PlaySoundAction",
        "PossiblePauseTriggerLocation": "types/debuggers/common",
        "id-2158": "PossiblePauseTriggerLocation",
        "PseudoRandomNumberGenerator": "types/core",
        "id-2232": "PseudoRandomNumberGenerator",
        "QuaternionRotation": "types/math/rotations",
        "id-3795": "QuaternionRotation",
        "RaycastFromCameraAction": "types/os",
        "id-3010": "RaycastFromCameraAction",
        "RaycastInPortalAction": "types/os",
        "id-3017": "RaycastInPortalAction",
        "RaycastRay": "types/os",
        "id-1912": "RaycastRay",
        "RaycastResult": "types/os",
        "id-1909": "RaycastResult",
        "RecordActionOptions": "types/records/extra",
        "id-3058": "RecordActionOptions",
        "RecordDataFailure": "types/records/data",
        "id-3450": "RecordDataFailure",
        "RecordDataSuccess": "types/records/data",
        "id-3446": "RecordDataSuccess",
        "RecordFileFailure": "types/records/files",
        "id-1879": "RecordFileFailure",
        "RecordFileSuccess": "types/records/files",
        "id-1875": "RecordFileSuccess",
        "RecordedFile": "types/experimental",
        "id-2766": "RecordedFile",
        "Recording": "types/experimental",
        "id-2764": "Recording",
        "RecordingOptions": "types/experimental",
        "id-2771": "RecordingOptions",
        "RegisterBuiltinPortalAction": "types/os",
        "id-2879": "RegisterBuiltinPortalAction",
        "RegisterCustomAppAction": "types/os",
        "id-2887": "RegisterCustomAppAction",
        "RegisterHtmlAppAction": "types/os",
        "id-2900": "RegisterHtmlAppAction",
        "RegisterPrefixOptions": "types/core",
        "id-2761": "RegisterPrefixOptions",
        "RejectAction": "types/os",
        "id-2669": "RejectAction",
        "RequestAuthDataAction": "types/os",
        "id-2978": "RequestAuthDataAction",
        "RequestFullscreenAction": "types/os",
        "id-2867": "RequestFullscreenAction",
        "RevokeMarkerPermissionFailure": "types/records/policies",
        "id-3549": "RevokeMarkerPermissionFailure",
        "RevokeMarkerPermissionSuccess": "types/records/policies",
        "id-3547": "RevokeMarkerPermissionSuccess",
        "RevokeRoleFailure": "types/records/roles",
        "id-3535": "RevokeRoleFailure",
        "RevokeRoleSuccess": "types/records/roles",
        "id-3533": "RevokeRoleSuccess",
        "RoomJoinOptions": "types/os",
        "id-3061": "RoomJoinOptions",
        "RoomOptions": "types/os",
        "id-3070": "RoomOptions",
        "RoomRemoteOptions": "types/os",
        "id-3086": "RoomRemoteOptions",
        "RoomTrackOptions": "types/os",
        "id-3074": "RoomTrackOptions",
        "RunScriptAction": "types/os",
        "id-2683": "RunScriptAction",
        "RuntimeBot": "types/core",
        "id-3122": "RuntimeBot",
        "RuntimeBotLinks": "types/core",
        "id-3261": "RuntimeBotLinks",
        "RuntimeBotVars": "types/core",
        "id-3258": "RuntimeBotVars",
        "SequenceRotation": "types/math/rotations",
        "id-3793": "SequenceRotation",
        "SerializableMutationRecord": "types/os",
        "id-2329": "SerializableMutationRecord",
        "SetAppOutputAction": "types/os",
        "id-2912": "SetAppOutputAction",
        "SetClipboardAction": "types/os",
        "id-2672": "SetClipboardAction",
        "SetRoomOptionsSuccess": "types/os",
        "id-1943": "SetRoomOptionsSuccess",
        "SetRoomTrackOptions": "types/os",
        "id-3092": "SetRoomTrackOptions",
        "SetRoomTrackOptionsFailure": "types/os",
        "id-1969": "SetRoomTrackOptionsFailure",
        "SetRoomTrackOptionsSuccess": "types/os",
        "id-1964": "SetRoomTrackOptionsSuccess",
        "ShareAction": "types/os",
        "id-2871": "ShareAction",
        "ShareOptions": "types/os",
        "id-2449": "ShareOptions",
        "ShowChatBarAction": "types/os",
        "id-2675": "ShowChatBarAction",
        "ShowChatOptions": "types/os",
        "id-2443": "ShowChatOptions",
        "ShowConfirmAction": "types/os",
        "id-2525": "ShowConfirmAction",
        "ShowConfirmOptions": "types/os",
        "id-2520": "ShowConfirmOptions",
        "ShowInputOptions": "types/os",
        "id-2509": "ShowInputOptions",
        "ShowJoinCodeAction": "types/os",
        "id-2863": "ShowJoinCodeAction",
        "ShowUploadAuxFileAction": "types/os",
        "id-2689": "ShowUploadAuxFileAction",
        "ShowUploadFilesAction": "types/os",
        "id-2691": "ShowUploadFilesAction",
        "SnapAxis": "types/os",
        "id-2423": "SnapAxis",
        "SnapGrid": "types/os",
        "id-2478": "SnapGrid",
        "SnapGridTarget": "types/os",
        "id-1884": "SnapGridTarget",
        "SnapPoint": "types/os",
        "id-2435": "SnapPoint",
        "SpeakTextAction": "types/os",
        "id-2954": "SpeakTextAction",
        "SpeakTextOptions": "types/experimental",
        "id-2228": "SpeakTextOptions",
        "StartFormAnimationAction": "types/os",
        "id-2732": "StartFormAnimationAction",
        "StartFormAnimationOptions": "types/os",
        "id-2708": "StartFormAnimationOptions",
        "StopFormAnimationAction": "types/os",
        "id-2721": "StopFormAnimationAction",
        "StopFormAnimationOptions": "types/os",
        "id-2729": "StopFormAnimationOptions",
        "SuccessfulGeolocation": "types/os",
        "id-2390": "SuccessfulGeolocation",
        "SyntheticVoice": "types/experimental",
        "id-2775": "SyntheticVoice",
        "TweenOptions": "types/experimental",
        "id-2225": "TweenOptions",
        "UnregisterCustomAppAction": "types/os",
        "id-2894": "UnregisterCustomAppAction",
        "UnregisterHtmlAppAction": "types/os",
        "id-2907": "UnregisterHtmlAppAction",
        "UnsuccessfulGeolocation": "types/os",
        "id-2400": "UnsuccessfulGeolocation",
        "UpdateEventRecordFailure": "types/records/events",
        "id-3521": "UpdateEventRecordFailure",
        "UpdateEventRecordSuccess": "types/records/events",
        "id-3519": "UpdateEventRecordSuccess",
        "UpdateHtmlAppAction": "types/os",
        "id-2309": "UpdateHtmlAppAction",
        "UploadedFile": "types/os",
        "id-1905": "UploadedFile",
        "VRSupportedAction": "types/os",
        "id-2845": "VRSupportedAction",
        "WakeLockConfiguration": "types/os",
        "id-3043": "WakeLockConfiguration",
        "WebhookOptions": "types/web",
        "id-1829": "WebhookOptions",
        "WebhookResult": "types/web",
        "id-1841": "WebhookResult",
        "AddCountResult": "types/records/events",
        "id-3497": "AddCountResult",
        "AvailablePermissions": "types/permissions",
        "id-3324": "AvailablePermissions",
        "BarcodeFormat": "types/os",
        "id-2503": "BarcodeFormat",
        "BotFilter": "types/core",
        "id-1863": "BotFilter",
        "BotSpace": "types/core",
        "id-3245": "BotSpace",
        "CameraType": "types/os",
        "id-2502": "CameraType",
        "CreatePublicRecordKeyResult": "types/records/key",
        "id-3435": "CreatePublicRecordKeyResult",
        "CustomAppOutputType": "types/os",
        "id-2882": "CustomAppOutputType",
        "CustomPortalOutputMode": "types/os",
        "id-2883": "CustomPortalOutputMode",
        "EaseMode": "types/animation",
        "id-2385": "EaseMode",
        "EaseType": "types/animation",
        "id-2384": "EaseType",
        "EraseDataResult": "types/records/data",
        "id-3469": "EraseDataResult",
        "EraseFileResult": "types/records/files",
        "id-3488": "EraseFileResult",
        "Geolocation": "types/os",
        "id-2389": "Geolocation",
        "GetCountResult": "types/records/events",
        "id-3507": "GetCountResult",
        "GetDataResult": "types/records/data",
        "id-3455": "GetDataResult",
        "GetRoomOptionsResult": "types/os",
        "id-1933": "GetRoomOptionsResult",
        "GetRoomRemoteOptionsResult": "types/os",
        "id-1975": "GetRoomRemoteOptionsResult",
        "GetRoomTrackOptionsResult": "types/os",
        "id-1951": "GetRoomTrackOptionsResult",
        "GrantMarkerPermissionResult": "types/records/policies",
        "id-3539": "GrantMarkerPermissionResult",
        "GrantRoleResult": "types/records/roles",
        "id-3525": "GrantRoleResult",
        "JoinRoomResult": "types/os",
        "id-1915": "JoinRoomResult",
        "LeaveRoomResult": "types/os",
        "id-1924": "LeaveRoomResult",
        "ListDataResult": "types/records/data",
        "id-3478": "ListDataResult",
        "ListStudiosResult": "types/records/studios",
        "id-3553": "ListStudiosResult",
        "Mod": "types/core",
        "id-1858": "Mod",
        "PortalType": "types/core",
        "id-3277": "PortalType",
        "PossiblePauseTriggerStates": "types/debuggers/common",
        "id-2162": "PossiblePauseTriggerStates",
        "RecordDataResult": "types/records/data",
        "id-3445": "RecordDataResult",
        "RecordFileResult": "types/records/files",
        "id-1874": "RecordFileResult",
        "RevokeMarkerPermissionResult": "types/records/policies",
        "id-3546": "RevokeMarkerPermissionResult",
        "RevokeRoleResult": "types/records/roles",
        "id-3532": "RevokeRoleResult",
        "SetRoomOptionsResult": "types/os",
        "id-1942": "SetRoomOptionsResult",
        "SetRoomTrackOptionsResult": "types/os",
        "id-1963": "SetRoomTrackOptionsResult",
        "ShowInputSuptype": "types/os",
        "id-2519": "ShowInputSuptype",
        "ShowInputType": "types/os",
        "id-2518": "ShowInputType",
        "SnapTarget": "types/os",
        "id-2442": "SnapTarget",
        "TagFilter": "types/core",
        "id-1859": "TagFilter",
        "UpdateEventRecordResult": "types/records/events",
        "id-3518": "UpdateEventRecordResult",
        "animateTag-byOptions": "actions/utility",
        "id-364": "animateTag-byOptions",
        "getbot-tag": "actions/data",
        "id-33": "getbot-tag",
        "getbots-tag": "actions/data",
        "id-17": "getbots-tag",
        "animateTag-byTag": "actions/utility",
        "id-358": "animateTag-byTag",
        "changeState": "actions/data",
        "id-177": "changeState",
        "create": "actions/data",
        "id-162": "create",
        "destroy": "actions/data",
        "id-166": "destroy",
        "getbot-filters": "actions/data",
        "id-26": "getbot-filters",
        "getbots-filters": "actions/data",
        "id-10": "getbots-filters",
        "priorityShout": "actions/event",
        "id-225": "priorityShout",
        "shout": "actions/event",
        "id-237": "shout",
        "updateBotLinks": "actions/data",
        "id-198": "updateBotLinks",
        "whisper": "actions/event",
        "id-263": "whisper",
        "action.perform": "actions/event",
        "id-1364": "action.perform",
        "action.reject": "actions/event",
        "id-1368": "action.reject",
        "ai.chat-string": "actions/ai",
        "id-423": "ai.chat-string",
        "ai.chat-message": "actions/ai",
        "id-426": "ai.chat-message",
        "ai.chat-messages": "actions/ai",
        "id-429": "ai.chat-messages",
        "ai.generateImage-string": "actions/ai",
        "id-442": "ai.generateImage-string",
        "ai.generateImage-request": "actions/ai",
        "id-446": "ai.generateImage-request",
        "ai.generateSkybox-string": "actions/ai",
        "id-434": "ai.generateSkybox-string",
        "ai.generateSkybox-request": "actions/ai",
        "id-438": "ai.generateSkybox-request",
        "applyDiffToSnapshot": "actions/data",
        "id-83": "applyDiffToSnapshot",
        "applyMod": "actions/mods",
        "id-152": "applyMod",
        "assert": "actions/debuggers",
        "id-407": "assert",
        "assertEqual": "actions/debuggers",
        "id-412": "assertEqual",
        "atPosition": "actions/bot-filters",
        "id-293": "atPosition",
        "byCreator": "actions/bot-filters",
        "id-314": "byCreator",
        "byID": "actions/bot-filters",
        "id-281": "byID",
        "byMod": "actions/bot-filters",
        "id-285": "byMod",
        "bySpace": "actions/bot-filters",
        "id-310": "bySpace",
        "byTag": "actions/bot-filters",
        "id-276": "byTag",
        "bytes.fromBase64String": "actions/bytes",
        "id-1577": "bytes.fromBase64String",
        "bytes.fromBase64Url": "actions/bytes",
        "id-1594": "bytes.fromBase64Url",
        "bytes.fromHexString": "actions/bytes",
        "id-1585": "bytes.fromHexString",
        "bytes.toBase64String": "actions/bytes",
        "id-1573": "bytes.toBase64String",
        "bytes.toBase64Url": "actions/bytes",
        "id-1589": "bytes.toBase64Url",
        "bytes.toHexString": "actions/bytes",
        "id-1581": "bytes.toHexString",
        "clearAnimations": "actions/utility",
        "id-378": "clearAnimations",
        "clearTagMasks": "actions/data",
        "id-106": "clearTagMasks",
        "crypto.hash-raw": "actions/crypto",
        "id-1600": "crypto.hash-raw",
        "crypto.hash-string": "actions/crypto",
        "id-1606": "crypto.hash-string",
        "crypto.hmac-raw": "actions/crypto",
        "id-1637": "crypto.hmac-raw",
        "crypto.hmac-string": "actions/crypto",
        "id-1630": "crypto.hmac-string",
        "crypto.asymmetric.decrypt": "actions/crypto",
        "id-1695": "crypto.asymmetric.decrypt",
        "crypto.asymmetric.encrypt": "actions/crypto",
        "id-1690": "crypto.asymmetric.encrypt",
        "crypto.asymmetric.isEncrypted": "actions/crypto",
        "id-1701": "crypto.asymmetric.isEncrypted",
        "crypto.asymmetric.isKeypair": "actions/crypto",
        "id-1686": "crypto.asymmetric.isKeypair",
        "crypto.asymmetric.keypair": "actions/crypto",
        "id-1682": "crypto.asymmetric.keypair",
        "crypto.encrypt": "actions/crypto",
        "id-1666": "crypto.encrypt",
        "crypto.hmacSha256": "actions/crypto",
        "id-1656": "crypto.hmacSha256",
        "crypto.hmacSha512": "actions/crypto",
        "id-1661": "crypto.hmacSha512",
        "crypto.isEncrypted": "actions/crypto",
        "id-1676": "crypto.isEncrypted",
        "crypto.keypair": "actions/crypto",
        "id-1705": "crypto.keypair",
        "crypto.sha256": "actions/crypto",
        "id-1622": "crypto.sha256",
        "crypto.sha512": "actions/crypto",
        "id-1626": "crypto.sha512",
        "crypto.sign": "actions/crypto",
        "id-1709": "crypto.sign",
        "deleteTagMaskText": "actions/data",
        "id-133": "deleteTagMaskText",
        "deleteTagText": "actions/data",
        "id-126": "deleteTagText",
        "diffSnapshots": "actions/data",
        "id-78": "diffSnapshots",
        "either": "actions/bot-filters",
        "id-318": "either",
        "os.beginAudioRecording": "actions/audio",
        "id-1411": "os.beginAudioRecording",
        "experiment.beginRecording": "actions/experimental",
        "id-1418": "experiment.beginRecording",
        "os.endAudioRecording": "actions/audio",
        "id-1415": "os.endAudioRecording",
        "experiment.endRecording": "actions/experimental",
        "id-1422": "experiment.endRecording",
        "experiment.getAnchorPointPosition": "actions/experimental",
        "id-1401": "experiment.getAnchorPointPosition",
        "experiment.getVoices": "actions/experimental",
        "id-1430": "experiment.getVoices",
        "experiment.localFormAnimation": "actions/experimental",
        "id-1374": "experiment.localFormAnimation",
        "experiment.localPositionTween": "actions/experimental",
        "id-1379": "experiment.localPositionTween",
        "experiment.localRotationTween": "actions/experimental",
        "id-1390": "experiment.localRotationTween",
        "experiment.speakText": "actions/experimental",
        "id-1425": "experiment.speakText",
        "getBotLinks": "actions/data",
        "id-194": "getBotLinks",
        "getBotPosition": "actions/data",
        "id-52": "getBotPosition",
        "getBotRotation": "actions/data",
        "id-57": "getBotRotation",
        "getBotTagValues": "actions/data",
        "id-42": "getBotTagValues",
        "getFormattedJSON": "actions/data",
        "id-70": "getFormattedJSON",
        "getID": "actions/data",
        "id-62": "getID",
        "getJSON": "actions/data",
        "id-66": "getJSON",
        "getLink": "actions/data",
        "id-190": "getLink",
        "getMod": "actions/mods",
        "id-47": "getMod",
        "getSnapshot": "actions/data",
        "id-74": "getSnapshot",
        "getTag": "actions/data",
        "id-88": "getTag",
        "inDimension": "actions/bot-filters",
        "id-289": "inDimension",
        "inStack": "actions/bot-filters",
        "id-299": "inStack",
        "insertTagMaskText": "actions/data",
        "id-118": "insertTagMaskText",
        "insertTagText": "actions/data",
        "id-111": "insertTagText",
        "math.abs": "actions/math",
        "id-1447": "math.abs",
        "math.addVectors": "actions/math",
        "id-1517": "math.addVectors",
        "math.areClose": "actions/math",
        "id-1548": "math.areClose",
        "math.avg": "actions/math",
        "id-1439": "math.avg",
        "math.degreesToRadians": "actions/math",
        "id-1473": "math.degreesToRadians",
        "math.getAnchorPointOffset": "actions/math",
        "id-1513": "math.getAnchorPointOffset",
        "math.getForwardDirection": "actions/math",
        "id-1481": "math.getForwardDirection",
        "math.getSeededRandomNumberGenerator": "actions/math",
        "id-1455": "math.getSeededRandomNumberGenerator",
        "math.intersectPlane": "actions/math",
        "id-1490": "math.intersectPlane",
        "math.negateVector": "actions/math",
        "id-1527": "math.negateVector",
        "math.normalizeVector": "actions/math",
        "id-1532": "math.normalizeVector",
        "math.radiansToDegrees": "actions/math",
        "id-1477": "math.radiansToDegrees",
        "math.random": "actions/math",
        "id-1468": "math.random",
        "math.randomInt": "actions/math",
        "id-1463": "math.randomInt",
        "math.scaleVector": "actions/math",
        "id-1542": "math.scaleVector",
        "math.setRandomSeed": "actions/math",
        "id-1459": "math.setRandomSeed",
        "math.sqrt": "actions/math",
        "id-1443": "math.sqrt",
        "math.stdDev": "actions/math",
        "id-1451": "math.stdDev",
        "math.subtractVectors": "actions/math",
        "id-1522": "math.subtractVectors",
        "math.sum": "actions/math",
        "id-1435": "math.sum",
        "math.vectorLength": "actions/math",
        "id-1537": "math.vectorLength",
        "neighboring": "actions/bot-filters",
        "id-304": "neighboring",
        "not": "actions/bot-filters",
        "id-325": "not",
        "os.attachDebugger": "actions/debuggers",
        "id-1320": "os.attachDebugger",
        "os.createDebugger-normal": "actions/debuggers",
        "id-1309": "os.createDebugger-normal",
        "os.createDebugger-pausable": "actions/debuggers",
        "id-1313": "os.createDebugger-pausable",
        "os.focusOn-bot": "actions/portals",
        "id-510": "os.focusOn-bot",
        "os.focusOn-position": "actions/portals",
        "id-515": "os.focusOn-position",
        "os.getExecutingDebugger": "actions/debuggers",
        "id-1317": "os.getExecutingDebugger",
        "showChat-options": "actions/os",
        "id-537": "showChat-options",
        "showChat-placeholder": "actions/os",
        "id-533": "showChat-placeholder",
        "os.showInput": "actions/portals",
        "id-756": "os.showInput",
        "os.addBotDropGrid": "actions/portals",
        "id-826": "os.addBotDropGrid",
        "os.addBotDropSnap": "actions/portals",
        "id-817": "os.addBotDropSnap",
        "os.addDropGrid": "actions/portals",
        "id-822": "os.addDropGrid",
        "os.addDropSnap": "actions/portals",
        "id-813": "os.addDropSnap",
        "os.applyUpdatesToInst": "actions/os",
        "id-1272": "os.applyUpdatesToInst",
        "os.arSupported": "actions/xr",
        "id-581": "os.arSupported",
        "os.bufferFormAddressGLTF": "actions/animations",
        "id-1230": "os.bufferFormAddressGLTF",
        "os.bufferSound": "actions/audio",
        "id-789": "os.bufferSound",
        "os.calculateRayFromCamera": "actions/portals",
        "id-1225": "os.calculateRayFromCamera",
        "os.cancelSound": "actions/audio",
        "id-793": "os.cancelSound",
        "os.capturePhoto": "actions/camera",
        "id-676": "os.capturePhoto",
        "os.closeBarcodeScanner": "actions/barcodes",
        "id-654": "os.closeBarcodeScanner",
        "os.closeCircleWipe": "actions/portals",
        "id-805": "os.closeCircleWipe",
        "os.closeImageClassifier": "actions/image-classification",
        "id-669": "os.closeImageClassifier",
        "os.closePhotoCamera": "actions/camera",
        "id-680": "os.closePhotoCamera",
        "os.closeQRCodeScanner": "actions/barcodes",
        "id-640": "os.closeQRCodeScanner",
        "os.compileApp": "actions/app",
        "id-940": "os.compileApp",
        "os.convertGeolocationToWhat3Words": "actions/os",
        "id-1210": "os.convertGeolocationToWhat3Words",
        "os.countEvents": "actions/records",
        "id-1200": "os.countEvents",
        "os.createInitializationUpdate": "actions/os",
        "id-1268": "os.createInitializationUpdate",
        "os.device": "actions/os",
        "id-555": "os.device",
        "os.disableAR": "actions/xr",
        "id-571": "os.disableAR",
        "os.disablePointOfView": "actions/portals",
        "id-596": "os.disablePointOfView",
        "os.disableVR": "actions/xr",
        "id-578": "os.disableVR",
        "os.disableWakeLock": "actions/os",
        "id-602": "os.disableWakeLock",
        "os.download": "actions/files",
        "id-608": "os.download",
        "os.downloadBots": "actions/files",
        "id-614": "os.downloadBots",
        "os.downloadBotsAsInitialzationUpdate": "actions/files",
        "id-619": "os.downloadBotsAsInitialzationUpdate",
        "os.downloadInst": "actions/files",
        "id-627": "os.downloadInst",
        "os.enableAR": "actions/xr",
        "id-567": "os.enableAR",
        "os.enableCollaboration": "actions/os",
        "id-561": "os.enableCollaboration",
        "os.enableCustomDragging": "actions/portals",
        "id-831": "os.enableCustomDragging",
        "os.enablePointOfView": "actions/portals",
        "id-587": "os.enablePointOfView",
        "os.enableVR": "actions/xr",
        "id-574": "os.enableVR",
        "os.eraseData": "actions/records",
        "id-1143": "os.eraseData",
        "os.eraseManualApprovalData": "actions/records",
        "id-1149": "os.eraseManualApprovalData",
        "os.exitFullscreenMode": "actions/portals",
        "id-481": "os.exitFullscreenMode",
        "os.getAverageFrameRate": "actions/os",
        "id-888": "os.getAverageFrameRate",
        "os.getCameraPosition": "actions/portals",
        "id-844": "os.getCameraPosition",
        "os.getCameraRotation": "actions/portals",
        "id-848": "os.getCameraRotation",
        "os.getCurrentDimension": "actions/portals",
        "id-727": "os.getCurrentDimension",
        "os.getCurrentInst": "actions/portals",
        "id-733": "os.getCurrentInst",
        "os.getCurrentInstUpdate": "actions/os",
        "id-1276": "os.getCurrentInstUpdate",
        "os.getData": "actions/records",
        "id-1125": "os.getData",
        "os.getDimensionalDepth": "actions/portals",
        "id-746": "os.getDimensionalDepth",
        "os.getFocusPoint": "actions/portals",
        "id-856": "os.getFocusPoint",
        "os.getGeolocation": "actions/os",
        "id-838": "os.getGeolocation",
        "os.getInputList": "actions/portals",
        "id-881": "os.getInputList",
        "os.getInputState": "actions/portals",
        "id-876": "os.getInputState",
        "os.getInstStateFromUpdates": "actions/os",
        "id-1264": "os.getInstStateFromUpdates",
        "os.getManualApprovalData": "actions/records",
        "id-1131": "os.getManualApprovalData",
        "os.getMediaPermission": "actions/os",
        "id-884": "os.getMediaPermission",
        "os.getMenuDimension": "actions/portals",
        "id-736": "os.getMenuDimension",
        "os.getMiniPortalDimension": "actions/portals",
        "id-739": "os.getMiniPortalDimension",
        "os.getPointerDirection": "actions/portals",
        "id-872": "os.getPointerDirection",
        "os.getPointerPosition": "actions/portals",
        "id-860": "os.getPointerPosition",
        "os.getPointerRotation": "actions/portals",
        "id-864": "os.getPointerRotation",
        "os.getPortalDimension": "actions/portals",
        "id-742": "os.getPortalDimension",
        "os.getPublicRecordKey": "actions/records",
        "id-1050": "os.getPublicRecordKey",
        "os.getRoomOptions": "actions/rooms",
        "id-906": "os.getRoomOptions",
        "os.getRoomRemoteOptions": "actions/rooms",
        "id-921": "os.getRoomRemoteOptions",
        "os.getRoomTrackOptions": "actions/rooms",
        "id-910": "os.getRoomTrackOptions",
        "os.getSubjectlessPublicRecordKey": "actions/records",
        "id-1054": "os.getSubjectlessPublicRecordKey",
        "os.getWakeLockConfiguration": "actions/os",
        "id-605": "os.getWakeLockConfiguration",
        "os.goToDimension": "actions/portals",
        "id-770": "os.goToDimension",
        "os.goToURL": "actions/portals",
        "id-774": "os.goToURL",
        "os.grantInstAdminPermission": "actions/records",
        "id-1072": "os.grantInstAdminPermission",
        "os.grantInstRole": "actions/records",
        "id-1092": "os.grantInstRole",
        "os.grantRecordMarkerPermission": "actions/records",
        "id-1058": "os.grantRecordMarkerPermission",
        "os.grantUserRole": "actions/records",
        "id-1077": "os.grantUserRole",
        "os.hasBotInMiniPortal": "actions/portals",
        "id-797": "os.hasBotInMiniPortal",
        "os.hideBarcode": "actions/barcodes",
        "id-662": "os.hideBarcode",
        "os.hideChat": "actions/os",
        "id-545": "os.hideChat",
        "os.hideHtml": "actions/os",
        "id-488": "os.hideHtml",
        "os.hideQRCode": "actions/barcodes",
        "id-647": "os.hideQRCode",
        "os.hideTips": "actions/portals",
        "id-469": "os.hideTips",
        "os.importAUX": "actions/files",
        "id-711": "os.importAUX",
        "os.inSheet": "actions/portals",
        "id-841": "os.inSheet",
        "os.isCollaborative": "actions/os",
        "id-558": "os.isCollaborative",
        "os.isInDimension": "actions/portals",
        "id-723": "os.isInDimension",
        "os.isRecordKey": "actions/records",
        "id-1107": "os.isRecordKey",
        "os.joinRoom": "actions/rooms",
        "id-891": "os.joinRoom",
        "os.leaveRoom": "actions/rooms",
        "id-896": "os.leaveRoom",
        "os.listBuiltinTags": "actions/app",
        "id-1041": "os.listBuiltinTags",
        "os.listData": "actions/records",
        "id-1137": "os.listData",
        "os.listFormAnimations": "actions/animations",
        "id-1245": "os.listFormAnimations",
        "os.listInstUpdates": "actions/os",
        "id-1261": "os.listInstUpdates",
        "os.listUserStudios": "actions/records",
        "id-1206": "os.listUserStudios",
        "os.loadInst": "actions/os",
        "id-703": "os.loadInst",
        "os.log": "actions/os",
        "id-834": "os.log",
        "os.meetCommand": "actions/os",
        "id-1297": "os.meetCommand",
        "os.meetFunction": "actions/os",
        "id-1302": "os.meetFunction",
        "os.openBarcodeScanner": "actions/barcodes",
        "id-650": "os.openBarcodeScanner",
        "os.openCircleWipe": "actions/portals",
        "id-809": "os.openCircleWipe",
        "os.openDevConsole": "actions/os",
        "id-782": "os.openDevConsole",
        "os.openImageClassifier": "actions/image-classification",
        "id-665": "os.openImageClassifier",
        "os.openPhotoCamera": "actions/camera",
        "id-672": "os.openPhotoCamera",
        "os.openQRCodeScanner": "actions/barcodes",
        "id-636": "os.openQRCodeScanner",
        "os.openURL": "actions/portals",
        "id-778": "os.openURL",
        "os.parseBotsFromData": "actions/files",
        "id-715": "os.parseBotsFromData",
        "os.playSound": "actions/audio",
        "id-785": "os.playSound",
        "os.raycast": "actions/portals",
        "id-1219": "os.raycast",
        "os.raycastFromCamera": "actions/portals",
        "id-1214": "os.raycastFromCamera",
        "os.recordData": "actions/records",
        "id-1111": "os.recordData",
        "os.recordEvent": "actions/records",
        "id-1194": "os.recordEvent",
        "os.recordFile": "actions/records",
        "id-1155": "os.recordFile",
        "os.recordManualApprovalData": "actions/records",
        "id-1118": "os.recordManualApprovalData",
        "os.registerApp": "actions/app",
        "id-931": "os.registerApp",
        "os.registerTagPrefix": "actions/app",
        "id-926": "os.registerTagPrefix",
        "os.remoteCount": "actions/os",
        "id-1283": "os.remoteCount",
        "os.remotes": "actions/os",
        "id-1258": "os.remotes",
        "os.replaceDragBot": "actions/portals",
        "id-719": "os.replaceDragBot",
        "os.requestAuthBot": "actions/records",
        "id-1044": "os.requestAuthBot",
        "os.requestAuthBotInBackground": "actions/records",
        "id-1047": "os.requestAuthBotInBackground",
        "os.requestFullscreenMode": "actions/portals",
        "id-478": "os.requestFullscreenMode",
        "os.requestWakeLock": "actions/os",
        "id-599": "os.requestWakeLock",
        "os.revokeInstRole": "actions/records",
        "id-1100": "os.revokeInstRole",
        "os.revokeRecordMarkerPermission": "actions/records",
        "id-1065": "os.revokeRecordMarkerPermission",
        "os.revokeUserRole": "actions/records",
        "id-1085": "os.revokeUserRole",
        "os.run": "actions/os",
        "id-548": "os.run",
        "os.setClipboard": "actions/os",
        "id-491": "os.setClipboard",
        "os.setRoomOptions": "actions/rooms",
        "id-901": "os.setRoomOptions",
        "os.setRoomTrackOptions": "actions/rooms",
        "id-915": "os.setRoomTrackOptions",
        "os.share": "actions/os",
        "id-801": "os.share",
        "os.showBarcode": "actions/barcodes",
        "id-657": "os.showBarcode",
        "os.showConfirm": "actions/portals",
        "id-766": "os.showConfirm",
        "os.showHtml": "actions/os",
        "id-484": "os.showHtml",
        "os.showInputForTag": "actions/portals",
        "id-750": "os.showInputForTag",
        "os.showJoinCode": "actions/barcodes",
        "id-473": "os.showJoinCode",
        "os.showQRCode": "actions/barcodes",
        "id-643": "os.showQRCode",
        "os.showUploadAuxFile": "actions/files",
        "id-630": "os.showUploadAuxFile",
        "os.showUploadFiles": "actions/files",
        "id-633": "os.showUploadFiles",
        "os.sleep": "actions/os",
        "id-453": "os.sleep",
        "os.startFormAnimation": "actions/animations",
        "id-1234": "os.startFormAnimation",
        "os.stopFormAnimation": "actions/animations",
        "id-1240": "os.stopFormAnimation",
        "os.tip": "actions/portals",
        "id-462": "os.tip",
        "os.toast": "actions/os",
        "id-457": "os.toast",
        "os.totalRemoteCount": "actions/os",
        "id-1287": "os.totalRemoteCount",
        "os.unloadInst": "actions/os",
        "id-707": "os.unloadInst",
        "os.unregisterApp": "actions/app",
        "id-936": "os.unregisterApp",
        "os.version": "actions/os",
        "id-552": "os.version",
        "os.vrSupported": "actions/xr",
        "id-584": "os.vrSupported",
        "os.agreedUponTime": "actions/time",
        "id-684": "os.agreedUponTime",
        "os.deadReckoningTime": "actions/time",
        "id-692": "os.deadReckoningTime",
        "os.instLatency": "actions/time",
        "id-686": "os.instLatency",
        "os.instTimeOffset": "actions/time",
        "id-688": "os.instTimeOffset",
        "os.instTimeOffsetSpread": "actions/time",
        "id-690": "os.instTimeOffsetSpread",
        "os.localTime": "actions/time",
        "id-682": "os.localTime",
        "removeTags": "actions/data",
        "id-141": "removeTags",
        "renameTag": "actions/data",
        "id-146": "renameTag",
        "setTag": "actions/data",
        "id-93": "setTag",
        "setTagMask": "actions/data",
        "id-99": "setTagMask",
        "subtractMods": "actions/mods",
        "id-157": "subtractMods",
        "superShout": "actions/event",
        "id-220": "superShout",
        "uuid": "actions/data",
        "id-355": "uuid",
        "web.get": "actions/web",
        "id-1728": "web.get",
        "web.hook": "actions/web",
        "id-1739": "web.hook",
        "web.post": "actions/web",
        "id-1733": "web.post",
        "configBot": "actions/os",
        "id-418": "configBot"
    }
}