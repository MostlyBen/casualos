{"version":2,"updates":[{"id":0,"timestamp":1679345153584,"update":"AY0B3d669A8AJwEEYm90cyQwMjgzNjVhNC0wMzZmLTQxZDAtOWFmMS03MTVhZDRmMmFhN2EBJwDd3rr0DwAGc3lzdGVtAgQA3d669A8BEmFiLTEuY29yZS5yZWd1bGF0ZScA3d669A8ABGZvcm0CBADd3rr0DxQHbm90aGluZycA3d669A8AB2FiMUNvcmUCBADd3rr0DxwEdHJ1ZScA3d669A8ADG9uQW55Qm90RHJhZwIEAN3euvQPIZQBQGlmIChsaW5rcy5yZW1lbWJlci50YWdzLmFiMUdyaWRTbmFwU3RhdGUpCnsKICAgIG9zLmFkZERyb3BTbmFwKCJncmlkIik7Cn0KCmlmIChsaW5rcy5yZW1lbWJlci50YWdzLmFiMUJvdFNuYXBTdGF0ZSkKewogICAgb3MuYWRkRHJvcFNuYXAoImZhY2UiKTsKfScA3d669A8ACHJlbWVtYmVyAgQA3d669A+2ASjwn5SXZTUzODBhNmItOGI0ZC00YThiLThiMDQtNThlMWViMDNlNWU3JwEEYm90cyQzNGMzYzIxMC01YmYxLTQ5Y2YtYjE1MS1lZTJkMDdmMGU2NzMBJwDd3rr0D90BBnN5c3RlbQIEAN3euvQP3gEQYWItMS5jb3JlLmNyZWF0ZSgA3d669A/dAQdhYjFDb3JlAXgnAN3euvQP3QEEZm9ybQIEAN3euvQP8AEHbm90aGluZycA3d669A/dAQtkZXNjcmlwdGlvbgIEAN3euvQP+AE9Qm90IHVzZWQgdG8gY3JlYXRlL21hbmlmZXN0IGJvdHMgaW50byBhbiBhY3R1YWwgc2NlbmUvcG9ydGFsLicA3d669A/dAQ1hYjFDcmVhdGVCb3RzAgQA3d669A+2AsABQC8vTkVFRCBUTyBVTkRFUlNUQU5EIFdIQVQgVE8gRE8gSUYgQU4gQVJSQVkgSVMgR0lWRU4KbGV0IGJvdHMgPSB0aGF0OwoKZm9yIChjb25zdCBwcm9wZXJ0eSBpbiBwYXN0ZWREYXRhKSB7CiAgICBjb25zdCBuZXdCb3QgPSBwYXN0ZWREYXRhW3Byb3BlcnR5XTsKICAgIAogICAgdmFyIGNyZWF0ZUJvdCA9IGNyZWF0ZShuZXdCb3QpOwp9JwEEYm90cyQ2NjU3Yjg2NS1lOTgzLTQ0MDEtOWZjOS1mNTQxOGQxOGE3ZjcBJwDd3rr0D/cDBnN5c3RlbQIEAN3euvQP+AMPYWItMS5jb3JlLmxlYXJuJwDd3rr0D/cDBWFiMUlEAgQA3d669A+IBAVsZWFybicA3d669A/3AwRmb3JtAgQA3d669A+OBAdub3RoaW5nJwDd3rr0D/cDB2FiMUJvb3QCBADd3rr0D5YEsQVAbGV0IGluc3RNb2RlQ2hlY2sgPSBhd2FpdCBvcy52ZXJzaW9uKCkucGxheWVyTW9kZTsKbGV0IGluaXRpYWxCb290ID0gbGlua3MucmVtZW1iZXIudGFncy5pbml0aWFsQm9vdCA/IHRydWUgOiBmYWxzZTsKCmdsb2JhbFRoaXMuYnVpbGRlclZlcnNpb24gPSBpbnN0TW9kZUNoZWNrID09ICJidWlsZGVyIiA/IHRydWUgOiBmYWxzZTsKZ2xvYmFsVGhpcy5hYjEgPSB0aGlzQm90OwoKaWYgKGluc3RNb2RlQ2hlY2sgPT0gImJ1aWxkZXIiKQp7CiAgICBsaW5rcy5yZW1lbWJlci50YWdzLmFiMUF3YWtlU3RhdGUgPSB0cnVlOwoKICAgIGF3YWl0IHRoaXNCb3QuYWIxQWRhcHQoImFiMUludGVyZmFjZSIpOwoKICAgIGlmIChpbml0aWFsQm9vdCkKICAgIHsKICAgICAgICBsaW5rcy5tYW5pZmVzdGF0aW9uLmFiMU1hbmlmZXN0Qm90KHtkaW1lbnNpb246IGNvbmZpZ0JvdC50YWdzLmdyaWRQb3J0YWwsIHBvc2l0aW9uOnt4OjAseTowfX0pOwogICAgfQp9CgovL1VVQUIKLy9ib3QudmFycwoKLy8gaWYgKGF1dG9BQikKLy8gewovLyAgICAgbGV0IGVnZ0RhdGEgPSBhd2FpdCBsaW5rcy5zdG9yZS5hYjFSZXRyaWV2ZVJlY29yZChhdXRvQUIpOwoKLy8gICAgIGNvbnNvbGUubG9nKGVnZ0RhdGEpOwovLyB9CgppZiAoaW5pdGlhbEJvb3QpCnsKICAgIGxpbmtzLnJlbWVtYmVyLnRhZ3MuaW5pdGlhbEJvb3QgPSBmYWxzZTsKfSgA3d669A/3AwdhYjFDb3JlAXgnAN3euvQP9wMIYWIxQWRhcHQCBADd3rr0D8kJ8gVAY29uc3Qgc3lzdGVtSUQgPSB0aGF0Owpjb25zdCBib290U3RyYXAgPSBvcy5nZXRBQjFCb290c3RyYXBVUkwoKQpjb25zdCBza2lsbEZpbGUgPSBib290U3RyYXAuc2xpY2UoMCwgYm9vdFN0cmFwLmxlbmd0aC03KSArIHN5c3RlbUlEICsiLmF1eCI7Cgp0cnkKewogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB3ZWJob29rKHsKICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgIHVybDogc2tpbGxGaWxlCiAgICB9KTsKCiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDApIHsKICAgICAgICBjb25zb2xlLmxvZygnW2FiMSBib290c3RyYXBdIENvdWxkIG5vdCBkb3dubG9hZCBza2lsbC4nKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgY29uc3QgdXBkYXRlcyA9IHJlc3BvbnNlLmRhdGEudXBkYXRlczsKICAgIGNvbnN0IHN0YXRlID0gYXdhaXQgb3MuZ2V0SW5zdFN0YXRlRnJvbVVwZGF0ZXModXBkYXRlcyk7CiAgICBjb25zdCBpZHMgPSBPYmplY3Qua2V5cyhzdGF0ZSk7CiAgICAKICAgIGF3YWl0IG9zLmFwcGx5VXBkYXRlc1RvSW5zdCh1cGRhdGVzKTsKCiAgICB3aGlzcGVyKGlkcywgdGFnTmFtZSwgY29uZmlnQm90LnRhZ3MuaW5zdCk7CgogICAgLy9hYjEubG9nKCJhYi0xIGFkYXB0Iik7CiAgICBjb25zb2xlLmxvZygiYWItMSBhZGFwdCIpOwoKICAgIHJldHVybiB0cnVlOwp9CmNhdGNoCnsKICAgIGNvbnNvbGUubG9nKCdbYWIxIGJvb3RzdHJhcF0gQ291bGQgbm90IGRvd25sb2FkIHNraWxsLicpOwp9JwDd3rr0D/cDC2Rlc2NyaXB0aW9uAgQA3d669A+8D1FUaGlzIHNraWxsIGlzIGRlc2lnbmVkIHRvIGhhbmRsZSBib3RoIHJlY29uZmlndXJhdGlvbiBvZiBhYi0xIGFuZCBpbml0aWFsaXphdGlvbi4nAN3euvQP9wMKb25Cb3RBZGRlZAIEAN3euvQPjhBJQGNvbnNvbGUubG9nKCJhYi0xIFNUQVJUIFVQIik7CgpzZXRUaW1lb3V0KCgpID0+IHRoaXNCb3QuYWIxQm9vdCgpLCA1MDApOycA3d669A/3AwhyZW1lbWJlcgIEAN3euvQP2BAo8J+Ul2U1MzgwYTZiLThiNGQtNGE4Yi04YjA0LTU4ZTFlYjAzZTVlNycA3d669A/3AwNsb2cCBADd3rr0D/8QkwFAbGV0IHVwZGF0ZWRMb2dzOwoKaWYgKCF0YWdzLmFiMUxvZykKewogICAgdXBkYXRlZExvZ3MgPSB0aGF0Owp9CmVsc2UKewogICAgdXBkYXRlZExvZ3MgPSB0YWdzLmFiMUxvZyArICJcbiIgKyB0aGF0Owp9CgptYXNrcy5hYjFMb2cgPSB1cGRhdGVkTG9nczsnAN3euvQP9wMNbWFuaWZlc3RhdGlvbgIEAN3euvQPkxIo8J+Ul2RjYTVkOTg3LWM0ZDgtNDZlNC1iNjBjLWRhYTdiMmY0ZGRhZCcA3d669A/3Aw1hYjFDcmVhdGVIb3N0AgQA3d669A+6EuUHQGlmIChsaW5rcy5yZW1lbWJlci50YWdzLmhvc3RJRCkKewogICAgb3MudG9hc3QoImNvZGUgY29waWVkIHRvIGNsaXBib2FyZCIpOwoKICAgIG9zLnNldENsaXBib2FyZChsaW5rcy5yZW1lbWJlci50YWdzLmhvc3RJRC5zdWJzdHJpbmcoMCwzKSArICItIiArIGxpbmtzLnJlbWVtYmVyLnRhZ3MuaG9zdElELnN1YnN0cmluZygzKSk7CgogICAgcmV0dXJuOwp9CgpsZXQgbmV3SG9zdElEID0gdXVpZCgpLnJlcGxhY2VBbGwoIi0iLCAiIikuc3Vic3RyaW5nKDAsNik7CmxldCBkYXRlID0gRGF0ZVRpbWUubm93KCkudG9NaWxsaXMoKTsKbGV0IHJlY29yZEtleSA9IGF3YWl0IG9zLmdldERhdGEobGlua3MucmVtZW1iZXIudGFncy5hYjFSZWNvcmRLZXksICJiMjA3YTVlNC1kNTMxLTQ4NGYtYTBkNi02NjI2YmVmNTkwMTMiLCAiaHR0cHM6Ly9wdWJsaWNvcy5saW5rIik7CmxldCByZWNvcmREYXRhID0gYXdhaXQgb3MucmVjb3JkRGF0YShyZWNvcmRLZXkuZGF0YSwgbmV3SG9zdElELCB7dXJsOiBjb25maWdCb3QudGFncy51cmwsIGRhdGU6IGRhdGV9LCAiaHR0cHM6Ly9wdWJsaWNvcy5saW5rIik7CgppZiAocmVjb3JkRGF0YS5zdWNjZXNzKQp7CiAgICBsaW5rcy5yZW1lbWJlci50YWdzLmhvc3RJRCA9IG5ld0hvc3RJRC5zdWJzdHJpbmcoMCwzKSArICItIiArIG5ld0hvc3RJRC5zdWJzdHJpbmcoMyk7CgogICAgb3Muc2V0Q2xpcGJvYXJkKGxpbmtzLnJlbWVtYmVyLnRhZ3MuaG9zdElEKTsKCiAgICB0aGF0LnRhZ3MubGFiZWwgPSAiam9pbiBjb2RlOiAiICsgbmV3SG9zdElELnN1YnN0cmluZygwLDMpICsgIi0iICsgbmV3SG9zdElELnN1YnN0cmluZygzKTsKCiAgICBvcy50b2FzdCgiaG9zdCBnZW5lcmF0ZWQsIGNvZGUgY29waWVkIHRvIGNsaXBib2FyZDogIiArIG5ld0hvc3RJRCk7Cn0KZWxzZQp7CiAgICBvcy50b2FzdCgic29tZXRoaW5nIHdlbnQgd3JvbmcsIHBsZWFzZSB0cnkgYWdhaW4iKTsKCiAgICBzaG91dCgiYWIxTWVudVJlZnJlc2giKTsKfScA3d669A/3AwthYjFKb2luSG9zdAIEAN3euvQPoBquBkBzaG91dCgiYWIxTWVudVJlZnJlc2giKTsKCmxldCBqb2luQ29kZSA9IHRoYXQudGV4dC5yZXBsYWNlQWxsKCItIiwgIiIpOwpsZXQgcmVjb3JkS2V5ID0gYXdhaXQgb3MuZ2V0RGF0YShsaW5rcy5yZW1lbWJlci50YWdzLmFiMVJlY29yZEtleSwgImIyMDdhNWU0LWQ1MzEtNDg0Zi1hMGQ2LTY2MjZiZWY1OTAxMyIsICJodHRwczovL3B1YmxpY29zLmxpbmsiKTsKbGV0IGdldFJlY29yZCA9IGF3YWl0IG9zLmdldERhdGEocmVjb3JkS2V5LmRhdGEsIGpvaW5Db2RlLCAiaHR0cHM6Ly9wdWJsaWNvcy5saW5rLyIpOwoKaWYgKGdldFJlY29yZC5zdWNjZXNzKQp7CiAgICBsZXQgZGF0ZSA9IERhdGVUaW1lLm5vdygpOwogICAgbGV0IGNyZWF0ZURhdGUgPSBEYXRlVGltZS5mcm9tTWlsbGlzKGdldFJlY29yZC5kYXRhLmRhdGUpOwogICAgbGV0IGRpZmZlcmVuY2UgPSBkYXRlLmRpZmYoY3JlYXRlRGF0ZSwgImRheXMiKS50b09iamVjdCgpOwoKICAgIGRpZmZlcmVuY2UgPSBNYXRoLmZsb29yKGRpZmZlcmVuY2UuZGF5cyk7CgogICAgaWYgKGRpZmZlcmVuY2UgPCA4KQogICAgewogICAgICAgIG9zLnRvYXN0KCJqb2luaW5nIGhvc3Qgbm93Iik7CiAgICAKICAgICAgICBvcy5nb1RvVVJMKGdldFJlY29yZC5kYXRhLnVybCk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgb3MudG9hc3QoImpvaW4gY29kZSBvdXQgb2YgZGF0ZSwgcGxlYXNlIGdlbmVyYXRlIGEgbmV3IGpvaW4gY29kZSIpOwogICAgfQp9CmVsc2UKewogICAgb3MudG9hc3QoInVuYWJsZSB0byBqb2luLCBwbGVhc2UgY2hlY2sgY29kZSBhbmQgdHJ5IGFnYWluIik7Cn0nAQRib3RzJDc2YWYwNDkxLTM5MTktNDk4NC1hYTgyLTIyYzc0MmY0MjYzZgEnAN3euvQPzyAGc3lzdGVtAgQA3d669A/QIA9hYi0xLmNvcmUuc3RvcmUoAN3euvQPzyAHYWIxQ29yZQF4JwDd3rr0D88gBGZvcm0CBADd3rr0D+EgB25vdGhpbmcnAN3euvQPzyALZGVzY3JpcHRpb24CBADd3rr0D+kgP1RoaXMgc2tpbGwgaXMgbWVhbnQgdG8gYmUgYSBjb25maWd1cmFibGUgbWVhbnMgdG8gcHVibGlzaCBkYXRhLicA3d669A/PIBBhYjFQdWJsaXNoUmVjb3JkAgQA3d669A+pIYsDQGxldCByZWNvcmREYXRhID0gdGhhdC5kYXRhOwpsZXQgcmVjb3JkTmFtZSA9IHRoYXQucmVjb3JkTmFtZTsKbGV0IHJlY29yZEtleSA9IHRoYXQucmVjb3JkS2V5ID8gdGhhdC5yZWNvcmRLZXkgOiBsaW5rcy5yZW1lbWJlci50YWdzLmFiMVJlY29yZEtleTsKbGV0IHJlY29yZEVuZHBvaW50ID0gdGhhdC5yZWNvcmRFbmRwb2ludCA/IHRoYXQucmVjb3JkRW5kcG9pbnQgOiAiaHR0cHM6Ly9wdWJsaWNvcy5saW5rIjsKCmlmICghcmVjb3JkRGF0YSkKewogICAgcmV0dXJuICJubyBkYXRhIHN1cHBsaWVkIjsKfQoKcmVjb3JkRGF0YSA9IGF3YWl0IG9zLnJlY29yZERhdGEocmVjb3JkS2V5LCByZWNvcmROYW1lLCByZWNvcmREYXRhLCByZWNvcmRFbmRwb2ludCk7CgpyZXR1cm4gcmVjb3JkRGF0YTsnAN3euvQPzyAOYWIxUHVibGlzaEZpbGUCBADd3rr0D7UkuANAbGV0IGZpbGUgPSB0aGF0LmZpbGU7CmxldCBmaWxlTmFtZSA9IHRoYXQuZmlsZU5hbWU7CmxldCBtaW1lVHlwZSA9IHRoYXQubWltZVR5cGU7CmxldCByZWNvcmRLZXkgPSB0aGF0LnJlY29yZEtleSA/IHRoYXQucmVjb3JkS2V5IDogbGlua3MucmVtZW1iZXIudGFncy5hYjFSZWNvcmRLZXk7CmxldCByZWNvcmRFbmRwb2ludCA9IHRoYXQucmVjb3JkRW5kcG9pbnQgPyB0aGF0LnJlY29yZEVuZHBvaW50IDogImh0dHBzOi8vcHVibGljb3MubGluayI7CgppZiAoIWZpbGUpCnsKICAgIHJldHVybiAibm8gZmlsZSBzdXBwbGllZCI7Cn0KCmxldCBmaWxlVXBsb2FkID0gYXdhaXQgb3MucmVjb3JkRmlsZShyZWNvcmRLZXksIGZpbGUsIHtkZXNjcmlwdGlvbjogZmlsZU5hbWUsIG1pbWVUeXBlOiBtaW1lVHlwZX0sIHJlY29yZEVuZHBvaW50KTsKCnJldHVybiBmaWxlVXBsb2FkOycA3d669A/PIBFhYjFDb3JlTWVudUFjdGlvbgIEAN3euvQP7icMQHRoaXNCb3QuKCk7JwDd3rr0D88gC29uU3RvcmVNZW51AgQA3d669A/7JylALy9DUkVBVEUgQSBNRU5VIEhFUkUKCm9zLnRvYXN0KCJIRUxMTyIpOycA3d669A/PIA9hYjFDb3JlTWVudUljb24CBADd3rr0D6UoCWlvc19zaGFyZScA3d669A/PIBBhYjFDb3JlTWVudUxhYmVsAgQA3d669A+vKAVzaGFyZScA3d669A/PIBRhYjFDb3JlTWVudVNvcnRPcmRlcgIEAN3euvQPtSgBNCcA3d669A/PIAhyZW1lbWJlcgIEAN3euvQPtygo8J+Ul2U1MzgwYTZiLThiNGQtNGE4Yi04YjA0LTU4ZTFlYjAzZTVlNycBBGJvdHMkZDgzNzE0NDQtOTE1OC00NDM2LThmYzctODRjYzkxYjdmNTI1AScA3d669A/eKAZzeXN0ZW0CBADd3rr0D98oEGFiLTEuY29yZS5zZWFyY2gnAN3euvQP3igEZm9ybQIEAN3euvQP8CgHbm90aGluZycA3d669A/eKAdhYjFDb3JlAgQA3d669A/4KAR0cnVlJwDd3rr0D94oD2FiMVJldHJpZXZlRmlsZQIEAN3euvQP/ShsQGlmICghdGhhdC51cmwpCnsKICAgIHJldHVybiAibm8gZmlsZSB1cmwgc3VwcGxpZWQiOwp9CgpsZXQgZGF0YSA9IGF3YWl0IG9zLmdldEZpbGUodGhhdC51cmwpOwoKcmV0dXJuIGRhdGE7JwDd3rr0D94oEWFiMVJldHJpZXZlUmVjb3JkAgQA3d669A/qKekCQGxldCByZWNvcmROYW1lID0gdGhhdC5yZWNvcmROYW1lOwpsZXQgcmVjb3JkS2V5ID0gdGhhdC5yZWNvcmRLZXkgPyB0aGF0LnJlY29yZEtleSA6IGxpbmtzLnJlbWVtYmVyLnRhZ3MuYWIxUmVjb3JkS2V5OwpsZXQgcmVjb3JkRW5kcG9pbnQgPSB0aGF0LnJlY29yZEVuZHBvaW50ID8gdGhhdC5yZWNvcmRFbmRwb2ludCA6ICJodHRwczovL3B1YmxpY29zLmxpbmsiOwoKaWYgKCFyZWNvcmROYW1lKQp7CiAgICByZXR1cm4gIm5vIHJlY29yZCBuYW1lIHN1cHBsaWVkIjsKfQoKbGV0IGdldFJlY29yZCA9IGF3YWl0IG9zLmdldERhdGEocmVjb3JkS2V5LCByZWNvcmROYW1lLCByZWNvcmRFbmRwb2ludCk7CgpyZXR1cm4gZ2V0UmVjb3JkOycA3d669A/eKBFhYjFDb3JlTWVudUFjdGlvbgIEAN3euvQP1CwsQHRoaXNCb3Qub25Mb29rdXBBQjFFZ2dzKHthYklEOiB0aGF0LnRleHR9KTsoAN3euvQP3igMb25TZWFyY2hNZW51AX4nAN3euvQP3igPYWIxQ29yZU1lbnVJY29uAgQA3d669A+CLQZzZWFyY2gnAN3euvQP3igQYWIxQ29yZU1lbnVMYWJlbAIEAN3euvQPiS0Gc2VhcmNoJwDd3rr0D94oFWFiMUNvcmVNZW51T25HZW5lcmF0ZQIEAN3euvQPkC1oQHRhZ3MuZm9ybSA9ICJpbnB1dCI7CnRhZ3Mub25DbGljayA9IG51bGw7CnRhZ3Mub25TdWJtaXQgPSBgQCBsaW5rcy5iYXNlU2tpbGwuYWIxQ29yZU1lbnVBY3Rpb24odGhhdCk7YDsnAN3euvQP3igUYWIxQ29yZU1lbnVTb3J0T3JkZXICBADd3rr0D/ktATInAN3euvQP3igIcmVtZW1iZXICBADd3rr0D/stKPCflJdlNTM4MGE2Yi04YjRkLTRhOGItOGIwNC01OGUxZWIwM2U1ZTcnAN3euvQP3igNbWFuaWZlc3RhdGlvbgIEAN3euvQPoi4o8J+Ul2RjYTVkOTg3LWM0ZDgtNDZlNC1iNjBjLWRhYTdiMmY0ZGRhZCcA3d669A/eKA9vbkxvb2t1cEFCMUVnZ3MCBADd3rr0D8ku7CJALy9zaG91dCgiYWIxTFRNU2VhcmNoIiwge2FiSUQ6IGFiSUQsIGtleToga2V5LCBhdXRvSGF0Y2g6IGJvb2xlYW4sIHJldHVyblR5cGU6IGRhdGEvbnVsbH0pOwphYjEubG9nKCJhYi0xIGFiIGxvYWQgIiArIHRoYXQpOwoKaWYgKGxpbmtzLm1hbmlmZXN0YXRpb24pCnsKICAgIGxpbmtzLm1hbmlmZXN0YXRpb24uYWIxQ2xpY2soKTsKfQoKY29uc3QgYWJJRCA9IHRoYXQuYWJJRDsKY29uc3Qga2V5ID0gdGhhdC5rZXk7CmNvbnN0IGF1dG9IYXRjaCA9IHRoYXQuYXV0b0hhdGNoOwpjb25zdCByZXR1cm5UeXBlID0gdGhhdC5yZXR1cm5UeXBlOwpjb25zdCBnZXRSZWNvcmQgPSBhd2FpdCBvcy5nZXREYXRhKGxpbmtzLnJlbWVtYmVyLnRhZ3MuYWIxUmVjb3JkS2V5LCBhYklELCBsaW5rcy5yZW1lbWJlci50YWdzLmFiMUVuZHBvaW50KTsKCmxldCBuZXdFZ2c7CgppZiAoIWdldFJlY29yZC5zdWNjZXNzICYmIGNvbmZpZ0JvdC50YWdzLmdpZykvL0JSSU5HIElOIElOSVRBSUFMIENPTExBQiBTRVRVUAp7CiAgICBjb25zdCBjb2xsYWJCb3QgPSBnZXRCb3QoImFiSURPcmlnaW4iLCAiY29sbGFiU2V0dXAiKTsKCiAgICBpZiAoIWNvbGxhYkJvdCkKICAgIHsKICAgICAgICB0aGlzQm90Lm9uTG9va3VwQUIxRWdncyh7YWJJRDogImNvbGxhYlNldHVwIiwgYXV0b0hhdGNoOiB0cnVlfSk7CiAgICB9Cn0KZWxzZSBpZiAoIWdldFJlY29yZC5zdWNjZXNzKQp7CiAgICAvL01BWUJFIFJFTU9WRSBUSElTIFNPT04/Pz8KICAgIGNvbnNvbGUubG9nKGdldFJlY29yZCwgImNoZWNraW5nIG9sZCBTVE0iKTsKCiAgICBsZXQgZmlsZW5hbWVoYXNoID0gY3J5cHRvLnNoYTI1NihhYklEKTsKICAgIGxldCBmaWxldXJsaGFzaCA9ICJhdXhfIiArIGZpbGVuYW1laGFzaCArICcuYXV4JzsKICAgIGxldCB0YXJnZXRVUkwgPSAiaHR0cHM6Ly9idWlsZGVyLXN0bS1maWxlcy5zMy5hbWF6b25hd3MuY29tLyIgKyBmaWxldXJsaGFzaDsKICAgIGxldCBvID0ge307CiAgICBvLm1ldGhvZCA9ICJHRVQiOwogICAgby51cmwgPSB0YXJnZXRVUkw7CgogICAgdHJ5IAogICAgewogICAgICAgIGxldCBsdG1SZXNwb25zZSA9IGF3YWl0IHdlYmhvb2sobyk7CgogICAgICAgIG5ld0VnZyA9IGx0bVJlc3BvbnNlLmRhdGEuc3RhdGU7CgogICAgICAgIGZvciAoY29uc3QgcHJvcGVydHkgaW4gbmV3RWdnKQogICAgICAgIHsKICAgICAgICAgICAgY29uc3QgbmV3TU9EID0gbmV3RWdnW3Byb3BlcnR5XTsKCiAgICAgICAgICAgIG5ld0VnZyA9IG5ld01PRDsKICAgICAgICB9CiAgICB9IAogICAgY2F0Y2ggKGUpIAogICAgewoKICAgICAgICBvcy50b2FzdChgbm8gZGF0YSBmb3VuZCBpbiAke2FiSUR9YCk7CgogICAgICAgIHNob3V0KCJhYjFNZW51UmVmcmVzaCIpOwoKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICByZXR1cm4gImFiSUQgbm90IGZvdW5kIjsKICAgIH0KfQplbHNlCnsKICAgIG5ld0VnZyA9IGdldFJlY29yZC5kYXRhOwp9CgppZiAocmV0dXJuVHlwZSA9PSAiZGF0YSIgJiYgZ2V0UmVjb3JkLnN1Y2Nlc3MpCnsKICAgIGxldCB2ZXJzaW9uID0gZ2V0UmVjb3JkLmRhdGEudGFyZ2V0VmVyc2lvbiAtIDE7CgogICAgaWYgKHRoYXQuYWJWZXJzaW9uKQogICAgewogICAgICAgIGlmICghaXNOYU4odGhhdC5hYlZlcnNpb24pKQogICAgICAgIHsKICAgICAgICAgICAgdmVyc2lvbiA9IHRoYXQuYWJWZXJzaW9uIC0gMTsKICAgICAgICB9CiAgICB9CgogICAgbGV0IGVnZ0RhdGFVUkwgPSBnZXRSZWNvcmQuZGF0YS5lZ2dWZXJzaW9uSGlzdG9yeVt2ZXJzaW9uXTsKICAgIGxldCByZXR1cm5EYXRhID0gYXdhaXQgb3MuZ2V0RmlsZShlZ2dEYXRhVVJMKTsKCiAgICByZXR1cm4gcmV0dXJuRGF0YTsKfQplbHNlIGlmIChyZXR1cm5UeXBlID09ICJkYXRhIikKewogICAgbGV0IHZlcnNpb25BcnJheSA9IEpTT04ucGFyc2UobmV3RWdnLmVnZ1ZlcnNpb25IaXN0b3J5KTsKICAgIGxldCBmaWxlVVVJRCA9IHZlcnNpb25BcnJheVtuZXdFZ2cubWF4VmVyc2lvbiAtIDFdOwogICAgbGV0IGZpbGVuYW1laGFzaExUTSA9IGNyeXB0by5zaGEyNTYoZmlsZVVVSUQpOwogICAgbGV0IGZpbGV1cmxoYXNoTFRNID0gImF1eF8iICsgZmlsZW5hbWVoYXNoTFRNICsgJy5hdXgnOwogICAgbGV0IHRhcmdldExUTVVSTCA9ICJodHRwczovL2J1aWxkZXItbHRtLWZpbGVzLnMzLmFtYXpvbmF3cy5jb20vIiArIGZpbGV1cmxoYXNoTFRNOwogICAgbGV0IG8gPSB7fTsKICAgIG8ubWV0aG9kID0gIkdFVCI7CiAgICBvLnVybCA9IHRhcmdldExUTVVSTDsKCiAgICBmaWxlR2V0ID0gYXdhaXQgd2ViaG9vayhvKTsKCiAgICBpZiAoZmlsZUdldC5zdGF0dXMgIT0gMjAwKQogICAgewogICAgICAgIG9zLnRvYXN0KCJubyBmaWxlIGZvdW5kIik7CgogICAgICAgIHNob3V0KCJhYjFSZWZyZXNoIik7CgogICAgICAgIHJldHVybjsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBmaWxlR2V0ID0gZmlsZUdldC5kYXRhOwogICAgfQoKICAgIHJldHVybiBmaWxlR2V0Owp9Cgpjb25zdCBhYjFCb3QgPSBsaW5rcy5tYW5pZmVzdGF0aW9uLmxpbmtzLmFiMUJvdDsKCmxldCBjdXJyZW50RGltOwpsZXQgc3BhY2VNb2Q7CmxldCBkaW1lbnNpb25YOwpsZXQgZGltZW5zaW9uWTsKbGV0IGRpbU1vZDsKCmlmIChhYjFCb3QpCnsKICAgIGN1cnJlbnREaW0gPSBhYjFCb3QudGFncy5kaW1lbnNpb247Cn0KZWxzZQp7CiAgICBjdXJyZW50RGltID0gb3MuZ2V0Q3VycmVudERpbWVuc2lvbigpOwp9CgppZiAoIWxpbmtzLnJlbWVtYmVyLnRhZ3MuYWIxR3JpZEZvY3VzKSAKewogICAgZGltZW5zaW9uWCA9IG51bGw7CiAgICBkaW1lbnNpb25ZID0gbnVsbDsKfQplbHNlCnsKICAgIGxldCBoYXRjaFBvaW50ID0gbGlua3MucmVtZW1iZXIudGFncy5hYjFHcmlkRm9jdXM7CgogICAgY3VycmVudERpbSA9IGhhdGNoUG9pbnQuZGltZW5zaW9uOwogICAgZGltZW5zaW9uWCA9IGhhdGNoUG9pbnQucG9zaXRpb24ueDsKICAgIGRpbWVuc2lvblkgPSBoYXRjaFBvaW50LnBvc2l0aW9uLnk7CiAgICBzcGFjZU1vZCA9IHtzcGFjZTogInNoYXJlZCJ9Owp9CgppZiAoIWF1dG9IYXRjaCAmJiBjb25maWdCb3QudGFncy5hYiA9PSBudWxsKQp7CiAgICBkaW1Nb2QgPSB7W2N1cnJlbnREaW1dOiB0cnVlLCBbY3VycmVudERpbSsiWCJdOiBkaW1lbnNpb25YLCBbY3VycmVudERpbSsiWSJdOiBkaW1lbnNpb25ZLCBkaW1lbnNpb246IGN1cnJlbnREaW19Owp9CmVsc2UKewogICAgaWYgKGNvbmZpZ0JvdC50YWdzLmtleSAmJiAhdGhhdC5rZXkpCiAgICB7CiAgICAgICAga2V5ID0gY29uZmlnQm90LnRhZ3Mua2V5CiAgICB9CgogICAgLy9TSE9VTEQgQkUgRklORSBVUCBUTyBIRVJFCgogICAgZGltTW9kID0ge29uQ3JlYXRlOiBgQHdoaXNwZXIodGhpc0JvdCwgJ292b0hhdGNoJywge2tleTogJyR7a2V5fScsIGF1dG9IYXRjaDogdHJ1ZX0pO2B9Owp9CgpsZXQgZWdnTW9kID0ge307CgplZ2dNb2Quc3BhY2UgPSAidGVtcExvY2FsIjsKZWdnTW9kLmluaXRpYWxUaW1lciA9IHRydWU7CmVnZ01vZC5hYklEID0gYWJJRDsKZWdnTW9kLm92b0hhdGNoID0gb3ZvTmVzdC50YWdzLm92b0hhdGNoTG9naWM7CmVnZ01vZC5vbkNsaWNrID0gb3ZvTmVzdC50YWdzLmFiMUVnZ0NsaWNrOwplZ2dNb2Qub25LZXlEb3duID0gb3ZvTmVzdC50YWdzLmFiMUVnZ09uS2V5RG93bjsKZWdnTW9kLm9uU2F2ZUlucHV0ID0gIkAgdGFncy5sYWJlbCA9ICd2Jyt0YWdzLnRhcmdldFZlcnNpb247IjsKZWdnTW9kLm9uQ3JlYXRlID0gYEAgdGFncy5wcm9ncmVzc0JhciA9IDA7dGFncy5pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHt3aGlzcGVyKHRoaXNCb3QsICJlZ2dUaW1lciIpO30sIDc1KTtgOwplZ2dNb2QuZm9ybSA9ICJlZ2ciOwplZ2dNb2QucHJvZ3Jlc3NCYXJDb2xvciA9ICIjQkY1RTY2IjsKZWdnTW9kLnByb2dyZXNzQmFyQmFja2dyb3VuZENvbG9yID0gIiM1OTI5ODkiOwplZ2dNb2QubGFiZWxTaXplID0gMC41OwplZ2dNb2QubGFiZWxDb2xvciA9ICIjNDA0MDQwIjsKZWdnTW9kLm9uUG9pbnRlckVudGVyID0gIkAgb3MudG9hc3QodGFncy5hYklEICsgJyB2Jyt0YWdzLnRhcmdldFZlcnNpb24pOyI7CmVnZ01vZC5sYWJlbFBvc2l0aW9uID0gImZyb250IjsKZWdnTW9kLm9yaWVudGF0aW9uTW9kZSA9ICJiaWxsYm9hcmRGcm9udCI7CmVnZ01vZC5lZ2dUaW1lciA9IGBAIGlmICh0YWdzLnByb2dyZXNzQmFyIDwgMSkgCnsKICAgIHRhZ3MucHJvZ3Jlc3NCYXIgKz0gMC4xOwp9CmVsc2UKewogICAgY2xlYXJUaW1lb3V0KHRhZ3MuaW50ZXJ2YWwpOwogICAgdGFncy5pbnRlcnZhbCA9IG51bGw7CiAgICB3aGlzcGVyKHRoaXNCb3QsICJvbkNsaWNrIik7CiAgICB0YWdzLnByb2dyZXNzQmFyID0gbnVsbDsKfWA7CgpjcmVhdGUobmV3RWdnLCBlZ2dNb2QsIGRpbU1vZCwgc3BhY2VNb2QpOwoKaWYgKHRoYXQuYWIxKQp7CiAgICBzaG91dCgiYWIxUmVzZXQiKTsKfScBBGJvdHMkZTUzODBhNmItOGI0ZC00YThiLThiMDQtNThlMWViMDNlNWU3AScA3d669A+2UQZzeXN0ZW0CBADd3rr0D7dREmFiLTEuY29yZS5yZW1lbWJlcicA3d669A+2UQRmb3JtAgQA3d669A/KUQdub3RoaW5nKADd3rr0D7ZRB2FiMUNvcmUBeCgA3d669A+2UQ1hYjFBd2FrZVN0YXRlAXknAN3euvQPtlELZGVzY3JpcHRpb24CBADd3rr0D9RRK1RoaXMgaXMgbWVhbnQgdG8gYmUgdGhlIGxvY2FsIHN0YXRlIGhvbGRlci4nAN3euvQPtlEMYWIxUmVjb3JkS2V5AgQA3d669A+AUi52UksxLllXSXRNUT09Lk5IWnNVR3RvTm1GR1kzRkpkakpUTW1zMU5GbHFVVDA5JwDd3rr0D7ZREmFiMUFjdGl2ZURpbWVuc2lvbgIEAN3euvQPr1IEaG9tZScA3d669A+2UQxhYjFCYXNlQ29sb3ICBADd3rr0D7RSByM5MDhCRkMoAN3euvQPtlEQYWIxR3JpZFNuYXBTdGF0ZQF4KADd3rr0D7ZRD2FiMUJvdFNuYXBTdGF0ZQF4JwDd3rr0D7ZRDmFiMU1lbnVSZWZyZXNoAgQA3d669A++UhhAY2xlYXJUYWdNYXNrcyh0aGlzQm90KTsoAN3euvQPtlELaW5pdGlhbEJvb3QBeCcA3d669A+2UQthYjFFbmRwb2ludAIEAN3euvQP2FIWaHR0cHM6Ly9wdWJsaWNvcy5saW5rLycBBGJvdHMkZjg2MDI4NzgtYzJlZi00OGJkLTg1YTAtOGQ2MzUxZWI0MTIwAScA3d669A/vUgZzeXN0ZW0CBADd3rr0D/BSD2FiLTEuY29yZS5pbnB1dCcA3d669A/vUgRmb3JtAgQA3d669A+AUwdub3RoaW5nJwDd3rr0D+9SCW9uS2V5RG93bgIEAN3euvQPiFM/QGlmICh0aGF0LmtleXMgPT0gImAiICYmIGJ1aWxkZXJWZXJzaW9uKQp7CiAgICBvcy5zaG93Q2hhdCgpOwp9JwDd3rr0D+9SBm9uQ2hhdAIEAN3euvQPyFORFEBpZiAoIWJ1aWxkZXJWZXJzaW9uKQp7CiAgICByZXR1cm47Cn0KCmlmICh0aGF0Lm1lc3NhZ2VbMF0gPT0gIi4iKSAKewogICAgb3MuaGlkZUNoYXQoKTsKCiAgICBzd2l0Y2ggKHRoYXQubWVzc2FnZSkKICAgIHsKICAgICAgICBjYXNlICcuZG93bmxvYWRBQjEnOgogICAgICAgICAgICBsaW5rcy5yZW1lbWJlci50YWdzLmFiMUF3YWtlU3RhdGUgPSBmYWxzZTsKCiAgICAgICAgICAgIGNvbnN0IGdyb3VwID0gYXdhaXQgb3Muc2hvd0lucHV0KCJncm91cCIpOwoKICAgICAgICAgICAgaWYgKGdyb3VwID09ICJhYjFDb3JlIikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbGlua3MucmVtZW1iZXIudGFncy5pbml0aWFsQm9vdCA9IHRydWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnN0IGFiMUdyb3VwID0gZ2V0Qm90cyhncm91cCk7CiAgICAgICAgICAgIAogICAgICAgICAgICBvcy5kb3dubG9hZEJvdHNBc0luaXRpYWx6YXRpb25VcGRhdGUoYWIxR3JvdXAsIGdyb3VwKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBgLmxvYWRTa2lsbGA6CiAgICAgICAgICAgIGxldCBza2lsbCA9IGF3YWl0IG9zLnNob3dJbnB1dCgic2tpbGwiKTsKCiAgICAgICAgICAgIGxpbmtzLmxlYXJuLmFiMUFkYXB0KHNraWxsKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBgLnN5c3RlbWA6CiAgICAgICAgICAgIGNvbmZpZ0JvdC50YWdzLnN5c3RlbVBvcnRhbCA9IHRydWU7CgogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGAuc2hlZXRgOgogICAgICAgICAgICBjb25maWdCb3QudGFncy5zaGVldFBvcnRhbCA9ICFjb25maWdCb3QudGFncy5tYXBQb3J0YWwgPyBjb25maWdCb3QudGFncy5ncmlkUG9ydGFsIDogY29uZmlnQm90LnRhZ3MubWFwUG9ydGFsOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBgLm1lbnVTaGVldGA6CiAgICAgICAgICAgIGNvbmZpZ0JvdC50YWdzLnNoZWV0UG9ydGFsID0gY29uZmlnQm90LnRhZ3MubWVudVBvcnRhbDsKCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgYC5kb3dubG9hZGA6CiAgICAgICAgICAgIG9zLmRvd25sb2FkQm90cyhnZXRCb3RzKCJzcGFjZSIsICJzaGFyZWQiKSwgImFiMUFsbCIpOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBgLnVwbG9hZGA6CiAgICAgICAgICAgIG9zLnNob3dVcGxvYWRBdXhGaWxlKCk7CgogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGAuc2xlZXBgOgogICAgICAgICAgICBjaGFuZ2VTdGF0ZShsaW5rcy5tYW5pZmVzdGF0aW9uLCAiQXNsZWVwIiwgImFiMU1hbmlmZXN0U3RhdGUiKTsKCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgYC4uYDoKICAgICAgICAgICAgY2hhbmdlU3RhdGUobGlua3MubWFuaWZlc3RhdGlvbiwgIkF3YWtlIiwgImFiMU1hbmlmZXN0U3RhdGUiKTsKCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJy5sb2cnOgogICAgICAgICAgICBpZiAoY29uZmlnQm90LnRhZ3MudGFnUG9ydGFsID09IGFiMS5pZCArICIuYWIxTG9nIikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29uZmlnQm90Lm1hc2tzLnRhZ1BvcnRhbCA9IG51bGw7CiAgICAgICAgICAgICAgICBjb25maWdCb3QubWFza3MudGFnUG9ydGFsU3BhY2UgPSBudWxsOwoKICAgICAgICAgICAgICAgIHRhZ1BvcnRhbEJvdC5tYXNrcy50YWdQb3J0YWxBbmNob3JQb2ludCA9IG51bGw7CgogICAgICAgICAgICAgICAgb3MuaGlkZUNoYXQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbmZpZ0JvdC5tYXNrcy50YWdQb3J0YWwgPSBhYjEuaWQgKyAiLmFiMUxvZyI7CiAgICAgICAgICAgICAgICBjb25maWdCb3QubWFza3MudGFnUG9ydGFsU3BhY2UgPSAidGVtcExvY2FsIjsKCiAgICAgICAgICAgICAgICB0YWdQb3J0YWxCb3QubWFza3MudGFnUG9ydGFsQW5jaG9yUG9pbnQgPSAidG9wIjsKCiAgICAgICAgICAgICAgICBvcy5zaG93Q2hhdCgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJy5oaWRlTG9nJzoKICAgICAgICAgICAgY29uZmlnQm90Lm1hc2tzLnRhZ1BvcnRhbCA9IG51bGw7CiAgICAgICAgICAgIGNvbmZpZ0JvdC5tYXNrcy50YWdQb3J0YWxTcGFjZSA9IG51bGw7CgogICAgICAgICAgICB0YWdQb3J0YWxCb3QubWFza3MudGFnUG9ydGFsQW5jaG9yUG9pbnQgPSBudWxsOwoKICAgICAgICAgICAgb3MuaGlkZUNoYXQoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgbGV0IG1lc3NhZ2UgPSB0aGF0Lm1lc3NhZ2U7CiAgICAgICAgICAgIGxldCBleGVjdXRhYmxlID0gbWVzc2FnZS5zbGljZSgxKTsKCiAgICAgICAgICAgIHRyeQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBvcy5ydW4oZXhlY3V0YWJsZSk7ICAKICAgICAgICAgICAgfQogICAgICAgICAgICBjYXRjaCAoZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgIH0KICAgIH0KfSgA3d669A/vUgdhYjFDb3JlAXgnAN3euvQP71ILZGVzY3JpcHRpb24CBADd3rr0D9tnQlRoaXMgaXMgbWVhbnQgdG8gaGFuZGxlIGFueSBub25lIG1lbnUgcmVsYXRlZCBpbnB1dHMvaW50ZXJhY3Rpb25zLicA3d669A/vUgxvbkZpbGVVcGxvYWQCBADd3rr0D55oJUBpZiAoIWJ1aWxkZXJWZXJzaW9uKQp7CiAgICByZXR1cm47Cn0nAN3euvQP71IFbGVhcm4CBADd3rr0D8RoKPCflJc2NjU3Yjg2NS1lOTgzLTQ0MDEtOWZjOS1mNTQxOGQxOGE3ZjcnAN3euvQP71IIcmVtZW1iZXICBADd3rr0D+toKPCflJdlNTM4MGE2Yi04YjRkLTRhOGItOGIwNC01OGUxZWIwM2U1ZTcnAN3euvQP71INbWFuaWZlc3RhdGlvbgIEAN3euvQPkmko8J+Ul2RjYTVkOTg3LWM0ZDgtNDZlNC1iNjBjLWRhYTdiMmY0ZGRhZAA="}]}