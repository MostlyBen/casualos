// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ensureNoExpected() throws error when expected is not undefined with matcherName 1`] = `
"[2mexpect([22m[31mreceived[39m[2m)[.not].toBeDefined()[22m

[1mMatcher error[22m: this matcher must not have an expected argument

Expected has type:  object
Expected has value: [32m{\\"a\\": 1}[39m"
`;

exports[`ensureNoExpected() throws error when expected is not undefined with matcherName and options 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22mtoBeDefined[2m()[22m

[1mMatcher error[22m: this matcher must not have an expected argument

Expected has type:  object
Expected has value: [32m{\\"a\\": 1}[39m"
`;

exports[`ensureNumbers() throws error when expected is not a number (backward compatibility) 1`] = `
"[2mexpect([22m[31mreceived[39m[2m)[.not].toBeCloseTo([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a number or bigint

Expected has type:  string
Expected has value: [32m\\"not_a_number\\"[39m"
`;

exports[`ensureNumbers() throws error when received is not a number (backward compatibility) 1`] = `
"[2mexpect([22m[31mreceived[39m[2m)[.not].toBeCloseTo([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [31mreceived[39m value must be a number or bigint

Received has type:  string
Received has value: [31m\\"not_a_number\\"[39m"
`;

exports[`ensureNumbers() with options promise empty isNot false received 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m, [22m[32mprecision[39m[2m)[22m

[1mMatcher error[22m: [31mreceived[39m value must be a number or bigint

Received has type:  string
Received has value: [31m\\"\\"[39m"
`;

exports[`ensureNumbers() with options promise empty isNot true expected 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a number or bigint

Expected has value: [32mundefined[39m"
`;

exports[`ensureNumbers() with options promise rejects isNot false expected 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mrejects[2m.[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a number or bigint

Expected has type:  string
Expected has value: [32m\\"0\\"[39m"
`;

exports[`ensureNumbers() with options promise rejects isNot true received 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mrejects[2m.[22mnot[2m.[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [31mreceived[39m value must be a number or bigint

Received has type:  symbol
Received has value: [31mSymbol(0.1)[39m"
`;

exports[`ensureNumbers() with options promise resolves isNot false received 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mresolves[2m.[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [31mreceived[39m value must be a number or bigint

Received has type:  boolean
Received has value: [31mfalse[39m"
`;

exports[`ensureNumbers() with options promise resolves isNot true expected 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mresolves[2m.[22mnot[2m.[22mtoBeCloseTo[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a number or bigint

Expected has value: [32mnull[39m"
`;

exports[`stringify() toJSON errors when comparing two objects 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mtoEqual[2m([22m[32mexpected[39m[2m) // deep equality[22m

[32m- Expected  - 1[39m
[31m+ Received  + 1[39m

[2m  Object {[22m
[32m-   \\"b\\": 1,[39m
[31m+   \\"a\\": 1,[39m
[2m    \\"toJSON\\": [Function toJSON],[22m
[2m  }[22m"
`;
